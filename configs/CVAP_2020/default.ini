[DEFAULT]
include = ../default.ini

[setup]
spark.name = DAS_CVAP_RUN_US
spark.loglevel = ERROR

[logging]
dvs_enabled = 0

[geodict]
# smallest to largest (no spaces)
#geolevel_names = Block,Block_Group,Tract,County,State
geolevel_names = Block,Block_Group,Tract,County,State,US
#(largest geocode length to smallest, put 0 for US or US+PR (i.e. above state) level)
geolevel_leng = 16,12,11,5,2,0

spine = non_aian_spine

# The first reccomendation from the Geography Division for the choice parameter aian_areas is:
aian_areas = Legal_Federally_Recognized_American_Indian_Area,American_Indian_Joint_Use_Area,Hawaiian_Home_Land,Alaska_Native_Village_Statistical_Area,State_Recognized_Legal_American_Indian_Area,Oklahoma_Tribal_Statistical_Area,Joint_Use_Oklahoma_Tribal_Statistical_Area

bypass_cutoff = 150
entity_threshold = 9
fanout_cutoff = 50
# set the following to either in_strong_MCDs, everywhere, or nowhere:
redefine_counties=  in_strong_MCDs

[schema]
schema: CVAP_SCHEMA

[budget]

epsilon_budget_total = 4/1

#budget in topdown order (e.g. US+PR, State, .... , Block)
geolevel_budget_prop = 102/512, 82/512, 82/512, 82/512, 82/512, 82/512

DPqueries = cvaprace
queriesprop = 1

[engine]
engine = programs.engine.topdown_engine.TopdownEngine

[constraints]
theInvariants.Block: pl94counts

[reader]
reader = programs.reader.table_reader.DASDecennialReader
tables = CVAPData PL94Data

privacy_table = CVAPData
constraint_tables = PL94Data

CVAPData.class = programs.reader.cvap.cvaptable.CVAPTable
PL94Data.class = programs.reader.cvap.pl94p4table.PL94P4Table


CVAPData.path = $DAS_S3ROOT/title13equiv_cvap2010test_data/cef_test_das.csv
# This is the class for reading MDFs produced by DAS. Another class will be needed to ingest official PL94-P4 table
PL94Data.path = $DAS_S3ROOT/title13equiv_cvap2010test_data/MDF10_PER-DAS20201101-112556.txt

# file format (assuming all tables will have the same file format)
# we could change this to be "table_name.format_option" if need be.
delimiter = |
header = True
comment = #
### DAVID'S TEST FILE IS A STANDARD CSV WITH COMMA AS SEP, HAVE TO CONVERT IT OR ADD THIS OPTION (inclined to do latter)
CVAPData.delimiter = ,

# Geography.variables = state county block etc will add later.
CVAPData.variables = race_cvap pcitizen geocode
PL94Data.variables = SCHEMA_TYPE_CODE SCHEMA_BUILD_ID TABBLKST TABBLKCOU TABTRACTCE TABBLKGRPCE TABBLK EPNUM RTYPE GQTYPE_PL VOTING_AGE CENHISP CENRACE

geocode.type = str
geocode.legal = 0000000000000000-9999999999999999
race_cvap.type = int
race_cvap.legal = 1-13
pcitizen.type = float
pcitizen.legal = 0-1

SCHEMA_TYPE_CODE.type = str
SCHEMA_BUILD_ID.type = str
TABBLKST.type = str
TABBLKCOU.type = str
TABTRACTCE.type = str
TABBLKGRPCE.type = str
TABBLK.type = str
EPNUM.type = int
RTYPE.type = str
GQTYPE_PL.type = str
VOTING_AGE.type = str
CENHISP.type = str
CENRACE.type = str

SCHEMA_TYPE_CODE.legal = AAA-ZZZ
SCHEMA_BUILD_ID.legal = 0.0.0-9.9.9
TABBLKST.legal = 00-72
TABBLKCOU.legal = 000-999
TABTRACTCE.legal = 000000-999999
TABBLKGRPCE.legal = 0-9
TABBLK.legal = 0000-9999
EPNUM.legal = 000000000-999999999
RTYPE.legal = 0-5
GQTYPE_PL.legal = 000-799
VOTING_AGE.legal = 1-2
CENHISP.legal = 1-2
CENRACE.legal = 1-63

geocode = TABBLKST TABBLKCOU TABTRACTCE TABBLKGRPCE TABBLK

# CVAP race coming from CVAP file, to be shifted by 1
race_cvap_das = race_cvap
race_cvap_das.type = int
race_cvap_das.legal = 0-11

# CVAP race recoded from PL94
cvap_race = CENHISP CENRACE
cvap_race.type = int
cvap_race.legal = 0-11

# CVAPData.newrecoder = True
CVAPData.recoder = programs.reader.cvap.cvap_recoder.CVAPRace
CVAPData.recode_variables = race_cvap_das

PL94Data.newrecoder = True
PL94Data.recoder = programs.reader.cvap.from_pl94mdf_recoder.PL94ToCVAPRaceRecoder
PL94Data.recode_variables = geocode cvap_race

CVAPData.geography = geocode
CVAPData.histogram = race_cvap_das

PL94Data.geography = geocode
PL94Data.histogram = cvap_race


[writer]
writer =  programs.writer.multi_writer.MultiWriter
multiwriter_writers = BlockNodeDicts, CVAP
#, CVAPCounts

# Where the data gets written:
output_path: $DAS_S3ROOT/users/$JBID/CVAP/{DATE}
output_datafile_name: data

produce_flag: 1

# delete existing file (if one) 0 or 1
overwrite_flag: 1
save_git_commit: 1

# combine output into a single file
s3cat: 1
s3cat_suffix: .txt
s3cat_verbose: 1
