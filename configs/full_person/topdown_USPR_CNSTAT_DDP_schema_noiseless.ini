# LAST CONFIRMED FUNCTIONAL: n/a (still debugging; Philip Leclerc)

[DEFAULT]
include = ../default.ini

[ENVIRONMENT]

[python]

[gurobi]
gurobi_logfile_name= /mnt/tmp/${JBID}gurobi.log
stats_partitions= 50

[logging]
logfilename= DAS
loglevel= INFO
logfolder= logs

[geodict]:
#smallest to largest (no spaces)
geolevel_names= Block,Block_Group,Tract,Tract_Group,County,State,US+PR
#(largest geocode length to smallest, put 1 for top level) (no spaces)
geolevel_leng= 16,12,11,9,5,2,1

[setup]
setup= programs.das_setup.DASDecennialSetup
# Spark config stuff
spark.name= DAS_CNSTAT_DDP_noiseless
#Error , only writes to log if there is an error (INFO, DEBUG, ERROR)
spark.loglevel= ERROR

[reader]
INCLUDE=Reader/unit_simple.ini
Person.path= s3://uscb-decennial-ite-das/title13_input_data/table1a_20190709/
Unit.path= s3://uscb-decennial-ite-das/title13_input_data/table10/
validate_input_data_constraints= False
numReaderPartitions= 60000

[engine]
engine= programs.engine.topdown_noiseless_engine.TopdownNoiselessEngine
check_budget= off
save_noisy= off
# should we delete the true data after making DP measurments (1 for True or 0 for False)
delete_raw= 0

[schema]
schema= DHCP_HHGQ

[budget]
epsilon_budget_total= 1.0
geolevel_budget_prop= 0.2, 0.2, 0.12, 0.12, 0.12, 0.12, 0.12
dpqueries= hhgq, votingage * hispanic * cenrace * citizen, age * sex, agegroup4 * sex, agegroup16 * sex, agegroup64 * sex, detailed
queriesprop= 0.2, 0.5, 0.05, 0.05, 0.05, 0.05,  0.1

[constraints]
#the invariants created, (no spaces)
theInvariants.Block= gqhh_vect, gqhh_tot
theInvariants.Tract= tot
#these are the info to build cenquery.constraint objects
theConstraints.Block= hhgq_total_lb, hhgq_total_ub, nurse_nva_0
theConstraints.Tract= total, hhgq_total_lb, hhgq_total_ub
minimalSchema= hhgq

[writer]
writer= programs.writer.multi_writer.MultiWriter
multiwriter_writers= BlockNodeDicts, DHCP_MDF
# Where the data gets written:
output_path= $DAS_S3ROOT/users/${JBID}/cnstatDdpSchema_noiselessEngine_nationWide_forBrett_attempt9/
output_datafile_name= data
produce_flag= 1
keep_attrs= geocode, syn, raw, raw_housing
# delete existing file (if one) 0 or 1
overwrite_flag= 1
save_git_commit= 1
# combine output into a single file
s3cat= 1
s3cat_suffix= .txt
s3cat_verbose= 1
num_parts= 0

[validator]
validator= programs.validator.validator
#validator= programs.stub_validator.validator
results_fname= /mnt/tmp/${JBID}_results

[assessment]

[takedown]
takedown= programs.takedown.takedown
delete_output= False

[experiment]
experiment= programs.experiment.experiment.experiment
run_experiment_flag= 0

[error_metrics]
error_metrics= programs.metrics.accuracy_metrics.AccuracyMetrics
