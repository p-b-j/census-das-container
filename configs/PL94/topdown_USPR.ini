[DEFAULT]
# root specifies the root location for all files; testdir specifies ???; mode specifies ???
# For the demo, the root in the current directory
root: .
testdir: .
mode: 0
INCLUDE=default.ini

[logging]
logfilename: DAS
loglevel: INFO
logfolder: logs

[ENVIRONMENT]
DAS_FRAMEWORK_VERSION: 0.0.1
GRB_ISV_NAME: Census
GRB_APP_NAME: DAS
GRB_Env3: 0
GRB_Env4:


[geodict]:
#smallest to largest (no spaces)
geolevel_names: Block,Block_Group,Tract,County,State,US+PR
#(largest geocode length to smallest, put 0 for US or US+PR (i.e. above state) level)
geolevel_leng: 16,12,11,5,2,0

[setup]
setup: programs.das_setup.DASDecennialSetup

# Spark config stuff
spark.name: DAS_RI_TEST
#local[6] tells spark to run locally with 6 threads
#spark.master: local[9]
#Error , only writes to log if there is an error (INFO, DEBUG, ERROR)
spark.loglevel: ERROR

[reader]
validate_input_data_constraints: off

[engine]
engine: programs.engine.topdown_engine.TopdownEngine
check_budget:off
save_noisy: off
# should we delete the true data after making DP measurments (1 for True or 0 for False)
delete_raw: 0

[schema]
schema: PL94

[budget]
epsilon_budget_total: 1.0


#budget in topdown order (e.g. US, State, .... , Block)
geolevel_budget_prop: 0.2,0.2,0.15,0.15,0.15,0.15



DPqueries:  cenrace * hispanic, cenrace, detailed
queriesprop: 0.25, 0.25,  0.5


[constraints]
#the invariants created, (no spaces)
theInvariants.Block: tot,va,gqhh_vect,gqhh_tot

#these are the info to build cenquery.constraint objects
theConstraints.Block: total,hhgq_total_lb,hhgq_total_ub,nurse_nva_0

minimalSchema: hhgq

[gurobi]
[writer]
# Where the data gets written:
output_path: s3://uscb-decennial-ite-das/users/ashme001/temp
output_datafile_name: data

produce_flag: 0

# delete existing file (if one) 0 or 1
overwrite_flag: 0

[validator]
#validator: programs.validator.validator
validator: programs.stub_validator.validator
results_fname: /mnt/tmp/RA_results

[assessment]

[takedown]
takedown: programs.takedown.takedown
delete_output: True

[experiment]
experiment: programs.experiment.experiment.experiment
run_experiment_flag: 0

[error_metrics]
#error_metrics: programs.metrics.das_error_metrics.error_metrics
error_metrics: programs.metrics.accuracy_metrics.AccuracyMetrics
calculate_binned_query_errors: False
