[DEFAULT]
include = ../default.ini
epsilon = -1.
run = 1

[gurobi]
l2_optimization_approach = DataIndUserSpecifiedQueriesNPass
rounder_optimization_approach = MultipassRounder

[logging]
logfilename= DAS
loglevel= INFO
logfolder= logs

[ENVIRONMENT]
DAS_FRAMEWORK_VERSION= 0.0.1
GRB_ISV_NAME= Census
GRB_APP_NAME= DAS
GRB_Env3= 0
GRB_Env4=

[geodict]
#geolevel_names= Block,Block_Group,Tract,County,State,US+PR
#geolevel_leng= 16,12,11,5,2,0
geolevel_names= Block,Block_Group,Tract,County,State
geolevel_leng= 16,12,11,5,2

[setup]
setup= programs.das_setup.DASDecennialSetup
spark.name= DAS_RI_DHCP_TEST
#spark.master= local[9]
spark.loglevel= ERROR

[reader]
INCLUDE=Reader/unit_simple.ini
Person.path= s3://uscb-decennial-ite-das/title13_input_data/table1a_20190709/va51.txt
Unit.path= s3://uscb-decennial-ite-das/title13_input_data/table10/va51.txt
numReaderPartitions= 500
readerPartitionLen= 14
validate_input_data_constraints= False
partition_by_block_group= off

[engine]
engine= programs.engine.topdown_engine.TopdownEngine
check_budget= off
delete_raw= 0
#geolevel_num_part= 0,0,300,5,1
#saved_noisy_app_id= application_1584132156517_0023
postprocess_only= off
#pool_measurements= on
reload_noisy= off
save_noisy= off
#noisy_measurements_postfix= noisy_measurements-eps%(epsilon)s-run%(run)s

[schema]
schema= DHCP_HHGQ

[budget]
epsilon_budget_total= %(epsilon)s
geolevel_budget_prop= 0.2, 0.2, 0.15, 0.15, 0.15, 0.15
dpqueries= total, hhgq * votingage * numraces, hhgq * votingage * hispanic * numraces, hhgq * votingage * hispanic * cenrace, detailed
queriesprop= 0.3, 0.2, 0.2, 0.3,  0.0
L2_DPqueryPart0= total
L2_DPqueryPart1= hhgq * votingage * numraces
L2_DPquerypart2= hhgq * votingage * hispanic * numraces
L2_DPqueryPart3= hhgq * votingage * hispanic * cenrace
#L2_DPqueryPart4= detailed
Rounder_DPqueryPart0= total, hhgq * votingage * numraces, hhgq * votingage * hispanic * numraces, hhgq * votingage * hispanic * cenrace

[constraints]
theInvariants.Block= gqhh_vect, gqhh_tot
theInvariants.State= tot
#these are the info to build cenquery.constraint objects
theConstraints.Block= hhgq_total_lb, hhgq_total_ub, nurse_nva_0
theConstraints.State= total, hhgq_total_lb, hhgq_total_ub
minimalSchema= hhgq

[writer]
writer= programs.writer.multi_writer.MultiWriter
#multiwriter_writers= BlockNodeDicts
multiwriter_writers= BlockNodeDicts, DHCP_MDF
#writer= programs.writer.block_node_writer.BlockNodeWriter
output_path= $DAS_S3ROOT/users/${JBID}/cnstatDdpSchema_multiL2_singlePassRounder_nested_accuracyTest_noDetailed_VA/
output_datafile_name= data
produce_flag= 1
keep_attrs= geocode, syn, raw, raw_housing
overwrite_flag= 1
save_git_commit= 1
s3cat= 1
s3cat_suffix= .txt
s3cat_verbose= 1
num_parts= 0

[validator]
#validator= programs.validator.validator
validator= programs.stub_validator.validator
results_fname= /mnt/tmp/${JBID}_results

[assessment]

[takedown]
takedown= programs.takedown.takedown
delete_output= False

[experiment]
experiment= programs.experiment.config_loops_exp.ConfigLoopsExperimentEngineWriter
run_experiment_flag= 1
loop1= FOR DEFAULT.run = 1 TO 1
loop2= FOR DEFAULT.epsilon IN 1.0,4.0,15.0,25.0,40.0,50.0,75.0,100.0,500.0

[error_metrics]
error_metrics= programs.metrics.accuracy_metrics.AccuracyMetrics
