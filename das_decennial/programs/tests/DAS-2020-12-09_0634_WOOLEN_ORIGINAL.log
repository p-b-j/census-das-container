2020-12-09 10:34:20,439 driver.py:1070 (main_setup) Config path: /mnt/users/garfi303/das-vm-config/das_decennial/configs/PL94/topdown_RI.ini
2020-12-09 10:34:36,687 das2020_driver.py:382 (<module>) applicationId: application_1607440845980_0018
2020-12-09 10:34:36,691 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "start": "now()", "message": "WOOLEN_ORIGINAL starting", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:36,691 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&start=now%28%29&message=WOOLEN_ORIGINAL+starting&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:36,716 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["driver_cores", "important", "cpu_percent", "modified_at", "git_commit", "driver_memory", "environment", "num_geolevels", "num_geounits", "updates", "das_instance_id", "mission_type", "stop", "exit_code", "cost", "campaign_name", "num_executors", "executor_memory_overhead", "max_result_size", "notes", "id", "spark_submit", "mission_url", "das_release", "applicationId", "executor_memory", "idle_minutes", "fname_logfile", "executor_cores", "das2020_version", "fname_stdout", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:36,718 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Hello world!", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:36,718 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Hello+world%21&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:36,738 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["spark_submit", "fname_stdout", "cost", "idle_minutes", "das2020_version", "das_instance_id", "num_executors", "max_result_size", "num_geolevels", "mission_url", "environment", "exit_code", "num_geounits", "stop", "das_release", "driver_memory", "campaign_name", "t", "modified_at", "git_commit", "executor_memory_overhead", "cpu_percent", "driver_cores", "updates", "important", "fname_logfile", "id", "executor_memory", "applicationId", "executor_cores", "notes", "start", "mission_type"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:36,747 driver.py:133 (config_apply_environment) EXPORT DAS_FRAMEWORK_VERSION=0.0.1
2020-12-09 10:34:36,747 driver.py:133 (config_apply_environment) EXPORT GRB_ISV_NAME=Census
2020-12-09 10:34:36,747 driver.py:133 (config_apply_environment) EXPORT GRB_APP_NAME=DAS
2020-12-09 10:34:36,748 driver.py:133 (config_apply_environment) EXPORT GRB_ENV3=0
2020-12-09 10:34:36,748 driver.py:133 (config_apply_environment) EXPORT GRB_ENV4=
2020-12-09 10:34:36,748 driver.py:133 (config_apply_environment) EXPORT EPSILON=1
2020-12-09 10:34:36,748 driver.py:159 (config_validate) Validating config section [gurobi]
2020-12-09 10:34:36,748 driver.py:159 (config_validate) Validating config section [spark]
2020-12-09 10:34:36,749 driver.py:159 (config_validate) Validating config section [logging]
2020-12-09 10:34:36,749 driver.py:159 (config_validate) Validating config section [ENVIRONMENT]
2020-12-09 10:34:36,749 driver.py:159 (config_validate) Validating config section [geodict]
2020-12-09 10:34:36,749 driver.py:159 (config_validate) Validating config section [setup]
2020-12-09 10:34:36,749 driver.py:159 (config_validate) Validating config section [reader]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [engine]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [schema]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [budget]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [constraints]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [writer]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [validator]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [assessment]
2020-12-09 10:34:36,750 driver.py:159 (config_validate) Validating config section [takedown]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [experiment]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [error_metrics]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [stats]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [python]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [hdmm]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [monitoring]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [alert]
2020-12-09 10:34:36,751 driver.py:159 (config_validate) Validating config section [environment]
2020-12-09 10:34:36,751 driver.py:654 (__init__) Reading filenames and class names from config file
2020-12-09 10:34:36,801 driver.py:707 (load_module) __import__ file: programs.das_setup
2020-12-09 10:34:37,089 driver.py:707 (load_module) __import__ file: programs.reader.table_reader
2020-12-09 10:34:37,112 pyplot.py:273 (switch_backend) Loaded backend qt5agg version unknown.
2020-12-09 10:34:37,116 pyplot.py:273 (switch_backend) Loaded backend agg version unknown.
2020-12-09 10:34:37,116 pyplot.py:273 (switch_backend) Loaded backend agg version unknown.
2020-12-09 10:34:37,163 driver.py:707 (load_module) __import__ file: programs.engine.topdown_engine
2020-12-09 10:34:37,163 driver.py:707 (load_module) __import__ file: programs.metrics.accuracy_metrics
2020-12-09 10:34:37,163 driver.py:707 (load_module) __import__ file: programs.writer.pickled_block_data_writer
2020-12-09 10:34:37,164 driver.py:707 (load_module) __import__ file: programs.stub_validator
2020-12-09 10:34:37,164 driver.py:707 (load_module) __import__ file: programs.takedown
2020-12-09 10:34:37,164 driver.py:669 (__init__) classes: DASDecennialSetup TopdownEngine AccuracyMetrics DASDecennialReader PickledBlockDataWriter validator takedown
2020-12-09 10:34:37,164 driver.py:673 (__init__) modules: <module 'programs.das_setup' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/das_setup.py'> <module 'programs.engine.topdown_engine' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/engine/topdown_engine.py'> <module 'programs.metrics.accuracy_metrics' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/metrics/accuracy_metrics.py'> <module 'programs.reader.table_reader' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/reader/table_reader.py'> <module 'programs.writer.pickled_block_data_writer' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/writer/pickled_block_data_writer.py'> <module 'programs.stub_validator' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/stub_validator.py'> <module 'programs.takedown' from '/mnt/users/garfi303/das-vm-config/das_decennial/programs/takedown.py'>
2020-12-09 10:34:37,164 driver.py:674 (__init__) Creating and running DAS setup object
2020-12-09 10:34:37,164 driver.py:248 (getconfig) config[setup][pre_release] not present; returning default False
2020-12-09 10:34:37,168 driver.py:248 (getconfig) config[engine][spark] not present; returning default True
2020-12-09 10:34:37,169 driver.py:241 (getconfig) config[geodict][geolevel_names]=Block,Block_Group,Tract,County,State
2020-12-09 10:34:37,169 driver.py:241 (getconfig) config[budget][only_dyadic_rationals]=False
2020-12-09 10:34:37,169 driver.py:241 (getconfig) config[budget][geolevel_budget_prop]=103/512, 103/512, 102/512, 102/512, 102/512
2020-12-09 10:34:37,169 driver.py:241 (getconfig) config[geodict][geolevel_leng]=16,12,11,5,2
2020-12-09 10:34:37,169 driver.py:241 (getconfig) config[geodict][spine]=opt_spine
2020-12-09 10:34:37,169 driver.py:248 (getconfig) config[budget][dp_mechanism] not present; returning default geometric_mechanism
2020-12-09 10:34:37,170 driver.py:723 (<lambda>) geolevels: ('Block', 'Block_Group', 'Tract', 'County', 'State')
2020-12-09 10:34:37,170 driver.py:241 (getconfig) config[schema][schema]=PL94
2020-12-09 10:34:37,170 driver.py:723 (<lambda>) schema keyword: PL94
2020-12-09 10:34:37,172 driver.py:248 (getconfig) config[engine][postprocess_only] not present; returning default False
2020-12-09 10:34:37,172 driver.py:241 (getconfig) config[reader][validate_input_data_constraints]=off
2020-12-09 10:34:37,172 driver.py:241 (getconfig) config[constraints][theInvariants.Block]=gqhh_vect, gqhh_tot
2020-12-09 10:34:37,172 driver.py:241 (getconfig) config[constraints][theConstraints.Block]=hhgq_total_lb, hhgq_total_ub, nurse_nva_0
2020-12-09 10:34:37,172 driver.py:251 (getconfig) config[constraints][theInvariants.Block_Group] does not exist and no default provided
2020-12-09 10:34:37,172 driver.py:251 (getconfig) config[constraints][theConstraints.Block_Group] does not exist and no default provided
2020-12-09 10:34:37,172 driver.py:241 (getconfig) config[constraints][theInvariants.Tract]=tot
2020-12-09 10:34:37,173 driver.py:241 (getconfig) config[constraints][theConstraints.Tract]=total, hhgq_total_lb, hhgq_total_ub
2020-12-09 10:34:37,173 driver.py:251 (getconfig) config[constraints][theInvariants.County] does not exist and no default provided
2020-12-09 10:34:37,173 driver.py:251 (getconfig) config[constraints][theConstraints.County] does not exist and no default provided
2020-12-09 10:34:37,173 driver.py:251 (getconfig) config[constraints][theInvariants.State] does not exist and no default provided
2020-12-09 10:34:37,173 driver.py:251 (getconfig) config[constraints][theConstraints.State] does not exist and no default provided
2020-12-09 10:34:37,175 driver.py:241 (getconfig) config[setup][spark.name]=DAS_RI_TEST
2020-12-09 10:34:37,175 driver.py:241 (getconfig) config[setup][spark.loglevel]=ERROR
2020-12-09 10:34:37,419 driver.py:678 (__init__) DAS setup returned <programs.das_setup.DASDecennialSetup object at 0x7f8408d8b518>
2020-12-09 10:34:37,430 driver.py:248 (getconfig) config[writer][run_type] not present; returning default dev
2020-12-09 10:34:37,430 driver.py:248 (getconfig) config[writer][descriptive_name] not present; returning default {BRANCH_NAME}
2020-12-09 10:34:37,430 driver.py:241 (getconfig) config[writer][produce_flag]=1
2020-12-09 10:34:37,430 driver.py:241 (getconfig) config[writer][output_datafile_name]=data
2020-12-09 10:34:37,430 driver.py:241 (getconfig) config[writer][overwrite_flag]=1
2020-12-09 10:34:37,430 driver.py:248 (getconfig) config[writer][write_metadata] not present; returning default True
2020-12-09 10:34:37,431 driver.py:241 (getconfig) config[writer][s3cat]=1
2020-12-09 10:34:37,431 driver.py:241 (getconfig) config[writer][s3cat_suffix]=.txt
2020-12-09 10:34:37,431 driver.py:241 (getconfig) config[writer][s3cat_verbose]=1
2020-12-09 10:34:37,431 driver.py:251 (getconfig) config[reader][comment] does not exist and no default provided
2020-12-09 10:34:37,431 driver.py:241 (getconfig) config[reader][header]=True
2020-12-09 10:34:37,431 driver.py:241 (getconfig) config[reader][delimiter]=\t
2020-12-09 10:34:37,431 driver.py:241 (getconfig) config[reader][numReaderPartitions]=500
2020-12-09 10:34:37,431 driver.py:248 (getconfig) config[reader][rangePartition] not present; returning default False
2020-12-09 10:34:37,431 driver.py:248 (getconfig) config[reader][readerPartitionLen] not present; returning default 11
2020-12-09 10:34:37,432 driver.py:248 (getconfig) config[reader][measure_rdd_times] not present; returning default False
2020-12-09 10:34:37,432 driver.py:241 (getconfig) config[reader][tables]=PersonData UnitData
2020-12-09 10:34:37,432 driver.py:738 (annotate) ANNOTATE: building table infrastructure
2020-12-09 10:34:37,432 driver.py:738 (annotate) ANNOTATE: table names ('PersonData', 'UnitData')
2020-12-09 10:34:37,432 driver.py:738 (annotate) ANNOTATE: Reading table module and class names from config
2020-12-09 10:34:37,434 driver.py:241 (getconfig) config[reader][PersonData.path]=s3://uscb-decennial-ite-das/title13_input_data/table8/ri44.txt
2020-12-09 10:34:37,434 driver.py:241 (getconfig) config[reader][PersonData.variables]=MAFID geocode white black aian asian nhopi other hispanic sex householder voting hhgq
2020-12-09 10:34:37,434 driver.py:241 (getconfig) config[reader][PersonData.recode_variables]=cenrace
2020-12-09 10:34:37,435 driver.py:251 (getconfig) config[reader][PersonData.delimiter] does not exist and no default provided
2020-12-09 10:34:37,435 driver.py:241 (getconfig) config[reader][PersonData.geography]=geocode
2020-12-09 10:34:37,435 driver.py:241 (getconfig) config[reader][PersonData.histogram]=hhgq voting hispanic cenrace
2020-12-09 10:34:37,435 driver.py:241 (getconfig) config[reader][cenrace]=white black aian asian nhopi other
2020-12-09 10:34:37,435 driver.py:248 (getconfig) config[reader][PersonData.newrecoder] not present; returning default False
2020-12-09 10:34:37,436 driver.py:241 (getconfig) config[reader][UnitData.path]=s3://uscb-decennial-ite-das/title13_input_data/table8/ri44.txt
2020-12-09 10:34:37,436 driver.py:241 (getconfig) config[reader][UnitData.variables]=MAFID geocode white black aian asian nhopi other hispanic sex householder voting hhgq
2020-12-09 10:34:37,437 driver.py:251 (getconfig) config[reader][UnitData.recode_variables] does not exist and no default provided
2020-12-09 10:34:37,437 driver.py:251 (getconfig) config[reader][UnitData.delimiter] does not exist and no default provided
2020-12-09 10:34:37,437 driver.py:241 (getconfig) config[reader][UnitData.geography]=geocode
2020-12-09 10:34:37,437 driver.py:241 (getconfig) config[reader][UnitData.histogram]=hhgq
2020-12-09 10:34:37,437 table_reader.py:507 (__init__) recode meta for table PersonData
2020-12-09 10:34:37,437 table_reader.py:507 (__init__) recode meta for table UnitData
2020-12-09 10:34:37,438 driver.py:241 (getconfig) config[reader][privacy_table]=PersonData
2020-12-09 10:34:37,438 driver.py:241 (getconfig) config[reader][constraint_tables]=UnitData
2020-12-09 10:34:37,438 driver.py:727 (<lambda>) The histogram variables set in config file ('hhgq', 'voting', 'hispanic', 'cenrace') that the data read are different from the variables of schema PL94 ['hhgq', 'votingage', 'hispanic', 'cenrace']
2020-12-09 10:34:37,438 engine_utils.py:105 (__init__) levels: ('Block', 'Block_Group', 'Tract', 'County', 'State')
2020-12-09 10:34:37,438 driver.py:723 (<lambda>) the variables in the schema are: {'hhgq': 0, 'voting': 1, 'hispanic': 2, 'cenrace': 3} (reader names)
2020-12-09 10:34:37,439 driver.py:723 (<lambda>) Their names in the PL94 schema are ['hhgq', 'votingage', 'hispanic', 'cenrace']
2020-12-09 10:34:37,439 driver.py:248 (getconfig) config[writer][write_all_geolevels] not present; returning default False
2020-12-09 10:34:37,439 driver.py:241 (getconfig) config[constraints][minimalSchema]=hhgq
2020-12-09 10:34:37,439 driver.py:241 (getconfig) config[engine][save_noisy]=on
2020-12-09 10:34:37,439 driver.py:248 (getconfig) config[engine][reload_noisy] not present; returning default True
2020-12-09 10:34:37,439 driver.py:251 (getconfig) config[engine][optimization_start_from_level] does not exist and no default provided
2020-12-09 10:34:37,666 driver.py:241 (getconfig) config[gurobi][record_gurobi_stats]=True
2020-12-09 10:34:37,666 driver.py:241 (getconfig) config[gurobi][record_CPU_stats]=True
2020-12-09 10:34:37,666 driver.py:241 (getconfig) config[gurobi][record_VM_stats]=True
2020-12-09 10:34:37,666 driver.py:241 (getconfig) config[gurobi][save_stats]=False
2020-12-09 10:34:37,666 driver.py:248 (getconfig) config[validator][validate_at_level] not present; returning default False
2020-12-09 10:34:37,666 driver.py:241 (getconfig) config[budget][epsilon_budget_total]=4/1
2020-12-09 10:34:37,667 driver.py:723 (<lambda>) The total budget is: 4
2020-12-09 10:34:37,667 driver.py:248 (getconfig) config[budget][approx_dp_delta] not present; returning default 1/10000000000
2020-12-09 10:34:37,667 driver.py:241 (getconfig) config[gurobi][l2_optimization_approach]=SinglePassRegular
2020-12-09 10:34:37,667 driver.py:241 (getconfig) config[writer][output_path]=s3://uscb-decennial-ite-das/users/garfi303/topdown_RI
2020-12-09 10:34:37,667 driver.py:248 (getconfig) config[engine][noisy_measurements_postfix] not present; returning default noisy_measurements
2020-12-09 10:34:37,667 driver.py:723 (<lambda>) The budget is split between geolevels with proportions: (Fraction(103, 512), Fraction(103, 512), Fraction(51, 256), Fraction(51, 256), Fraction(51, 256))
2020-12-09 10:34:37,668 driver.py:241 (getconfig) config[budget][DPqueries]=hhgq, cenrace * hispanic * votingage, detailed
2020-12-09 10:34:37,668 driver.py:251 (getconfig) config[budget][UnitDPqueries] does not exist and no default provided
2020-12-09 10:34:37,668 driver.py:251 (getconfig) config[budget][VacancyDPqueries] does not exist and no default provided
2020-12-09 10:34:37,668 driver.py:251 (getconfig) config[budget][RounderQueries] does not exist and no default provided
2020-12-09 10:34:37,668 driver.py:723 (<lambda>) ###
Levels of the marginals of main histogram DP queries to be measured:
2020-12-09 10:34:37,669 driver.py:723 (<lambda>) votingage levels:
------------------------
17 and under
18 and over
---------------------------------
2020-12-09 10:34:37,669 driver.py:723 (<lambda>) cenrace levels:
------------------------
white
black
aian
asian
nhopi
sor
white-black
white-aian
white-asian
white-nhopi
white-sor
black-aian
black-asian
black-nhopi
black-sor
aian-asian
aian-nhopi
aian-sor
asian-nhopi
asian-sor
nhopi-sor
white-black-aian
white-black-asian
white-black-nhopi
white-black-sor
white-aian-asian
white-aian-nhopi
white-aian-sor
white-asian-nhopi
white-asian-sor
white-nhopi-sor
black-aian-asian
black-aian-nhopi
black-aian-sor
black-asian-nhopi
black-asian-sor
black-nhopi-sor
aian-asian-nhopi
aian-asian-sor
aian-nhopi-sor
asian-nhopi-sor
white-black-aian-asian
white-black-aian-nhopi
white-black-aian-sor
white-black-asian-nhopi
white-black-asian-sor
white-black-nhopi-sor
white-aian-asian-nhopi
white-aian-asian-sor
white-aian-nhopi-sor
white-asian-nhopi-sor
black-aian-asian-nhopi
black-aian-asian-sor
black-aian-nhopi-sor
black-asian-nhopi-sor
aian-asian-nhopi-sor
white-black-aian-asian-nhopi
white-black-aian-asian-sor
white-black-aian-nhopi-sor
white-black-asian-nhopi-sor
white-aian-asian-nhopi-sor
black-aian-asian-nhopi-sor
white-black-aian-asian-nhopi-sor
---------------------------------
2020-12-09 10:34:37,669 driver.py:723 (<lambda>) hhgq levels:
------------------------
Household
Correctional facilities for adults
Juvenile facilities
Nursing facilities/Skilled-nursing facilities
Other institutional facilities
College/University student housing
Military quarters
Other noninstitutional facilities
---------------------------------
2020-12-09 10:34:37,669 driver.py:723 (<lambda>) hispanic levels:
------------------------
Not Hispanic or Latino
Hispanic or Latino
---------------------------------
2020-12-09 10:34:37,670 driver.py:723 (<lambda>) ###
Levels of the marginals of unit histogram DP queries to be measured:
2020-12-09 10:34:37,670 driver.py:723 (<lambda>) ###
Levels of the marginals of vacancy DP queries to be measured:
2020-12-09 10:34:37,670 driver.py:241 (getconfig) config[gurobi][l2_optimization_approach]=SinglePassRegular
2020-12-09 10:34:37,670 driver.py:241 (getconfig) config[gurobi][rounder_optimization_approach]=CellWiseRounder
2020-12-09 10:34:37,670 driver.py:248 (getconfig) config[gurobi][seq_optimization_approach] not present; returning default L2PlusRounderWithBackup
2020-12-09 10:34:37,670 driver.py:241 (getconfig) config[budget][queriesprop]=230/1024, 692/1024, 102/1024
2020-12-09 10:34:37,671 driver.py:723 (<lambda>) The sequential-composition budget allocation between queries in a geolevel is:
DPQueries: (Fraction(115, 512), Fraction(173, 256), Fraction(51, 512)) (0.224609375,0.67578125,0.099609375)
2020-12-09 10:34:37,671 driver.py:723 (<lambda>) Global scale parameter: 1/4
2020-12-09 10:34:37,671 driver.py:690 (__init__) DAS object complete
2020-12-09 10:34:37,671 das2020_driver.py:436 (<module>) Creating release: /usr/bin/python36 /mnt/users/garfi303/das-vm-config/das_decennial/das2020_driver.py --logfile /dev/null --make_release logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.release.zip configs/PL94/topdown_RI.ini
2020-12-09 10:34:39,941 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 0, "heartbeat": 1, "DAS_RUN_ID": "23399", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:39,942 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=0&heartbeat=1&DAS_RUN_ID=23399&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:39,964 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:39,974 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "applicationId": "application_1607440845980_0018", "num_geolevels": 5, "DAS_RUN_ID": "23399", "jbid": "garfi303", "driver_memory": 5368709120, "executor_memory": 17179869184, "executor_cores": 4, "num_executors": 4, "max_result_size": 0, "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:39,975 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&applicationId=application_1607440845980_0018&num_geolevels=5&DAS_RUN_ID=23399&jbid=garfi303&driver_memory=5368709120&executor_memory=17179869184&executor_cores=4&num_executors=4&max_result_size=0&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:39,989 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "das_instance_id", "updates", "start", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "fname_logfile", "executor_memory_overhead", "t", "mission_type", "git_commit"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:39,989 das2020_driver.py:496 (<module>) {"applicationId": "application_1607440845980_0018", "START": 1607528079.9894145, "func": " __main__"}
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.eventLog.enabled=true
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.executor.instances=4
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.network.crypto.keyLength=256
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.network.crypto.enabled=true
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.yarn.executor.memoryOverheadFactor=0.1875
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.executorEnv.PYTHONPATH=/mnt/das_python<CPS>{{PWD}}/pyspark.zip<CPS>{{PWD}}/py4j-0.10.7-src.zip
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.driver.extraLibraryPath=/usr/lib/hadoop/lib/native:/usr/lib/hadoop-lzo/lib/native
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.network.crypto.keyFactoryAlgorithm=PBKDF2WithHmacSHA256
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.sql.parquet.output.committer.class=com.amazon.emr.committer.EmrOptimizedSparkSqlParquetOutputCommitter
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.blacklist.decommissioning.timeout=1h
2020-12-09 10:34:40,023 das2020_driver.py:503 (<module>) spark.task.maxFailures=8
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.driver.memory=5g
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.yarn.appMasterEnv.SPARK_PUBLIC_DNS=$(hostname -f)
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.sql.emr.internal.extensions=com.amazonaws.emr.spark.EmrSparkSessionExtensions
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.serializer=org.apache.spark.serializer.KryoSerializer
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.executor.memory=16g
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.driver.host=ip-10-252-45-55.ite.ti.census.gov
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter.param.PROXY_HOSTS=ip-10-252-45-55.ite.ti.census.gov
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.ssl.keyStorePassword=L0Uh22UNQ0
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.sql.warehouse.dir=hdfs:///user/spark/warehouse
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.app.id=application_1607440845980_0018
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.history.fs.logDirectory=hdfs:///var/log/spark/apps
2020-12-09 10:34:40,024 das2020_driver.py:503 (<module>) spark.ui.filters=org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.executor.extraJavaOptions=-Dlog4j.configuration=file:log4j.properties
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.ssl.trustStorePassword=hYJWxK1xQ6
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.driver.extraJavaOptions=-Dlog4j.configuration=file:log4j.properties
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter.param.PROXY_URI_BASES=http://ip-10-252-45-55.ite.ti.census.gov:20888/proxy/application_1607440845980_0018
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.driver.maxResultSize=0g
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.yarn.dist.files=file:///mnt/users/garfi303/das-vm-config/das_decennial/log4j.properties
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.hadoop.yarn.timeline-service.enabled=false
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.local.dir=/mnt/tmp/
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.executor.id=driver
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.ssl.protocol=TLSv1.2
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.driver.appUIAddress=http://ip-10-252-45-55.ite.ti.census.gov:4040
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.decommissioning.timeout.threshold=20
2020-12-09 10:34:40,025 das2020_driver.py:503 (<module>) spark.stage.attempt.ignoreOnDecommissionFetchFailure=true
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.driver.port=45241
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.executor.extraLibraryPath=/usr/lib/hadoop/lib/native:/usr/lib/hadoop-lzo/lib/native
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.eventLog.dir=hdfs:///var/log/spark/apps/
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.authenticate=true
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version.emr_internal_use_only.EmrFileSystem=2
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.sql.execution.arrow.enabled=true
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.network.timeout=3000
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.network.crypto.saslFallback=true
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.executor.cores=4
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.scheduler.listenerbus.eventqueue.capacity=50000
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.ssl.keyStore=/usr/share/aws/emr/security/conf/keystore.jks
2020-12-09 10:34:40,026 das2020_driver.py:503 (<module>) spark.ssl.keyPassword=dP59a3iKFU
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.sql.hive.metastore.sharedPrefixes=com.amazonaws.services.dynamodbv2
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.ssl.trustStore=/usr/share/aws/emr/security/conf/truststore.jks
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.serializer.objectStreamReset=100
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.submit.deployMode=client
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.ssl.enabledAlgorithms=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.ssl.enabled=true
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.sql.parquet.fs.optimized.committer.optimization-enabled=true
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.driver.extraClassPath=/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/goodies/lib/emr-spark-goodies.jar:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/usr/share/aws/emr/s3select/lib/emr-s3-select-spark-connector.jar
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.executor.memoryOverhead=20g
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.hadoop.mapreduce.fileoutputcommitter.cleanup-failures.ignored.emr_internal_use_only.EmrFileSystem=true
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.history.ui.port=18080
2020-12-09 10:34:40,027 das2020_driver.py:503 (<module>) spark.shuffle.service.enabled=true
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.resourceManager.cleanupExpiredHost=true
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.executor.extraClassPath=/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/goodies/lib/emr-spark-goodies.jar:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/usr/share/aws/emr/s3select/lib/emr-s3-select-spark-connector.jar
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.files.fetchFailure.unRegisterOutputOnHost=true
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.ui.proxyBase=/proxy/application_1607440845980_0018
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.master=yarn
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.app.name=garfi303:WOOLEN_ORIGINAL
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.rdd.compress=True
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.hadoop.fs.s3.maxRetries=50
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.yarn.historyServer.address=ip-10-252-45-55.ite.ti.census.gov:18080
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.yarn.isPython=true
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.dynamicAllocation.enabled=true
2020-12-09 10:34:40,028 das2020_driver.py:503 (<module>) spark.blacklist.decommissioning.enabled=true
2020-12-09 10:34:40,029 driver.py:738 (annotate) ANNOTATE: save_git_commit set to True
2020-12-09 10:34:40,030 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "save_git_commit set to True", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:40,030 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=save_git_commit+set+to+True&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:40,050 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:40,778 driver.py:738 (annotate) ANNOTATE: Git commit info: ami-hardening-linux commit 1e5ee5a07feaf3152ab1deb3e3368e471cdc0b62|emr-hardening-amazon-linux commit 64e12cc4c703b94fb65be9399f229731f61bf815|stackConfig commit 560b3d097cf16d76cf09d81e106b3765f130ff24|das_decennial commit 4c79eeda4c0dba0e178d2fc52b27887e2def46d1|das_framework commit db1ee20997ca872a3e71f5f3b0044d0ba8acc08a|ctools commit 74c9b8b05a2a32948d400e26d6d37da5b108db22|dfxml commit dd6fab74f87ffcfafb49e5ac6c092860ab863967|python_dvs commit a2eef140ab774ae9702fa74ad72a76b35a792e2b|etl_2020 commit f3e22fe3c2f47b5cfae28891cbc27fb8586644d1|census_etl commit 27d69154400fc4cda78ed9ad91fe835b347ef051|ctools commit 74c9b8b05a2a32948d400e26d6d37da5b108db22|safetab-2020 commit cd481d441d970e0804ca20384ab92d23c843c0a4|das-vm-config commit a32ee23f8cabd3ad592309563ddd1954a787bc7a (modifications from commit present at run time)
2020-12-09 10:34:40,780 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Git commit info: ami-hardening-linux commit 1e5ee5a07feaf3152ab1deb3e3368e471cdc0b62|emr-hardening-amazon-linux commit 64e12cc4c703b94fb65be9399f229731f61bf815|stackConfig commit 560b3d097cf16d76cf09d81e106b3765f130ff24|das_decennial commit 4c79eeda4c0dba0e178d2fc52b27887e2def46d1|das_framework commit db1ee20997ca872a3e71f5f3b0044d0ba8acc08a|ctools commit 74c9b8b05a2a32948d400e26d6d37da5b108db22|dfxml commit dd6fab74f87ffcfafb49e5ac6c092860ab863967|python_dvs commit a2eef140ab774ae9702fa74ad72a76b35a792e2b|etl_2020 commit f3e22fe3c2f47b5cfae28891cbc27fb8586644d1|census_etl commit 27d69154400fc4cda78ed9ad91fe835b347ef051|ctools commit 74c9b8b05a2a32948d400e26d6d37da5b108db22|safetab-2020 commit cd481d441d970e0804ca20384ab92d23c843c0a4|das-vm-config commit a32ee23f8cabd3ad592309563ddd1954a787bc7a (modifications from commit present at run time)", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:40,780 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Git+commit+info%3A+ami-hardening-linux+commit+1e5ee5a07feaf3152ab1deb3e3368e471cdc0b62%7Cemr-hardening-amazon-linux+commit+64e12cc4c703b94fb65be9399f229731f61bf815%7CstackConfig+commit+560b3d097cf16d76cf09d81e106b3765f130ff24%7Cdas_decennial+commit+4c79eeda4c0dba0e178d2fc52b27887e2def46d1%7Cdas_framework+commit+db1ee20997ca872a3e71f5f3b0044d0ba8acc08a%7Cctools+commit+74c9b8b05a2a32948d400e26d6d37da5b108db22%7Cdfxml+commit+dd6fab74f87ffcfafb49e5ac6c092860ab863967%7Cpython_dvs+commit+a2eef140ab774ae9702fa74ad72a76b35a792e2b%7Cetl_2020+commit+f3e22fe3c2f47b5cfae28891cbc27fb8586644d1%7Ccensus_etl+commit+27d69154400fc4cda78ed9ad91fe835b347ef051%7Cctools+commit+74c9b8b05a2a32948d400e26d6d37da5b108db22%7Csafetab-2020+commit+cd481d441d970e0804ca20384ab92d23c843c0a4%7Cdas-vm-config+commit+a32ee23f8cabd3ad592309563ddd1954a787bc7a+%28modifications+from+commit+present+at+run+time%29&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:40,800 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:40,807 connectionpool.py:943 (_new_conn) Starting new HTTPS connection (1): dasexperimental.ite.ti.census.gov:443
2020-12-09 10:34:40,889 connectionpool.py:442 (_make_request) https://dasexperimental.ite.ti.census.gov:443 "POST /api/das_config_upload HTTP/1.1" 200 0
2020-12-09 10:34:40,891 driver.py:1119 (main_run_das) START /mnt/users/garfi303/das-vm-config/das_decennial/das_framework/driver.py
2020-12-09 10:34:40,891 driver.py:1126 (main_run_das) Config file:
2020-12-09 10:34:40,891 driver.py:1128 (main_run_das) [gurobi]
2020-12-09 10:34:40,891 driver.py:1130 (main_run_das) record_gurobi_stats: True
2020-12-09 10:34:40,891 driver.py:1130 (main_run_das) record_cpu_stats: True
2020-12-09 10:34:40,891 driver.py:1130 (main_run_das) record_vm_stats: True
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) save_stats: False
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) stats_partitions: 50
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) print_gurobi_stats: False
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) threshold_function: threshwigglesum
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) bhfdr: 0.1
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) wigglesummult: 1.
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) maxtaildelta: 0.01
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) l2_optimization_approach: SinglePassRegular
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) rounder_optimization_approach: CellWiseRounder
2020-12-09 10:34:40,892 driver.py:1130 (main_run_das) gurobi_path: $GUROBI_HOME/linux64/lib/${PYTHON_VERSION}_utf32/
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) gurobi_lic: $GUROBI_HOME/gurobi_client.lic
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) gurobi_logfile_name: gurobi.log
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) outputflag: 1
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) optimalitytol: 1e-9
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) barconvtol: 1e-8
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) barqcpconvtol: 0
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) bariterlimit: 1000
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) feasibilitytol: 1e-9
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) presolve: -1
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) numericfocus: 3
2020-12-09 10:34:40,893 driver.py:1130 (main_run_das) gurobi_lic_create: true
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) tokenserver: mr7dassv001.ti.census.gov,mr7dassv002.ti.census.gov
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) port: 41954
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads: 1
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_root2root: 64
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_state: 32
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_county: 16
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_tract_group: 8
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_tract: 8
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_block_group: 8
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) threads_block: 8
2020-12-09 10:34:40,894 driver.py:1130 (main_run_das) python_presolve: 1
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) summarize_stats: True
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) l2_suboptimal_allowed: False
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) l2_grb_algorithm: -1
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) l2_grb_presolve: -1
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) l2_grb_presparsify: -1
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) notification_frequency: 60
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,895 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,895 driver.py:1128 (main_run_das) [spark]
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) spark.driver.maxresultsize: 0g
2020-12-09 10:34:40,895 driver.py:1130 (main_run_das) spark.executor.memoryoverhead: 16g
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) spark.local.dir: /mnt/tmp/
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) spark.eventlog.enabled: true
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) spark.eventlog.dir: /mnt/tmp/logs/
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) spark.submit.deploymode: client
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) spark.network.timeout: 3000
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,896 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,896 driver.py:1128 (main_run_das) [logging]
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) logfilename: DAS
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) loglevel: INFO
2020-12-09 10:34:40,896 driver.py:1130 (main_run_das) logfolder: logs
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) dvs_enabled: 0
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) dvs_api_endpoint: https://dasexperimental.ite.ti.census.gov/api/dvs
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,897 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,897 driver.py:1128 (main_run_das) [ENVIRONMENT]
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) das_framework_version: 0.0.1
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) grb_isv_name: Census
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) grb_app_name: DAS
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) grb_env3: 0
2020-12-09 10:34:40,897 driver.py:1130 (main_run_das) grb_env4:
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) aws_auto_scaling_home: /opt/aws/apitools/as
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) aws_default_region: us-gov-west-1
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) aws_cloudwatch_home: /opt/aws/apitools/mon
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) aws_elb_home: /opt/aws/apitools/elb
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) aws_path: /opt/aws
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) bcc_http_proxy: http://proxy.ti.census.gov:3128
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) bcc_https_proxy: https://proxy.ti.census.gov:3128
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) bcc_no_proxy: 10.,172.16.,148.129.,169.254.169.254,127.,localhost,.census.gov,.s3.us-gov-west-1.amazonaws.com,.dynamodb.us-gov-west-1.amazonaws.com
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) clusterid: j-2KNUGMTOQL225
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) das_environment: ITE
2020-12-09 10:34:40,898 driver.py:1130 (main_run_das) das_loghost: aws-syslog-vip.ti.census.gov
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) das_s3root: s3://uscb-decennial-ite-das
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) friendly_name: magal
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) git_ssl_no_verify: true
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) grb_license_file: /usr/local/lib64/python3.6/site-packages/gurobipy/gurobi_client.lic
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) gurobi_home: /usr/local/lib64/python3.6/site-packages/gurobipy
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) jbid: garfi303
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) mission_name: WOOLEN_ORIGINAL
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) no_proxy: 10.,172.16.,148.129.,169.254.169.254,127.,localhost,.census.gov,.s3.us-gov-west-1.amazonaws.com,.dynamodb.us-gov-west-1.amazonaws.com
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) temp: /usr/tmp
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) tmpdir: /usr/tmp
2020-12-09 10:34:40,899 driver.py:1130 (main_run_das) tz: America/New_York
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,900 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,900 driver.py:1128 (main_run_das) [geodict]
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) geolevel_names: Block,Block_Group,Tract,County,State
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) geolevel_leng: 16,12,11,5,2
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) spine: opt_spine
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) aian_areas: Legal_Federally_Recognized_American_Indian_Area,American_Indian_Joint_Use_Area,Hawaiian_Home_Land,Alaska_Native_Village_Statistical_Area,State_Recognized_Legal_American_Indian_Area,Oklahoma_Tribal_Statistical_Area,Joint_Use_Oklahoma_Tribal_Statistical_Area
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) bypass_cutoff: 150
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) entity_threshold: 9
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) fanout_cutoff: 12
2020-12-09 10:34:40,900 driver.py:1130 (main_run_das) redefine_counties: in_strong_MCDs
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) geocode_length: 16
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) geo_toplevel:
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) geo_bottomlevel:
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) geo_path:
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,901 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,901 driver.py:1128 (main_run_das) [setup]
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) setup: programs.das_setup.DASDecennialSetup
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) spark.name: DAS_RI_TEST
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) spark.loglevel: ERROR
2020-12-09 10:34:40,901 driver.py:1130 (main_run_das) environment: AWS_AUTO_SCALING_HOME,AWS_DEFAULT_REGION,AWS_CLOUDWATCH_HOME,AWS_ELB_HOME,AWS_PATH,BCC_HTTP_PROXY,BCC_HTTPS_PROXY,BCC_NO_PROXY,BOOTSTRAP_VERSION,CLUSTERID,DAS_ENVIRONMENT,DAS_ESB,DAS_LOGHOST,DAS_S3ROOT,FRIENDLY_NAME,GIT_SSL_NO_VERIFY,GRB_APP_NAME,GRB_ISV_NAME,GRB_LICENSE_FILE,GUROBI_HOME,JBID,MASTER,MISSION_NAME,NO_PROXY,TEMP,TMPDIR,TZ
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,902 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,902 driver.py:1128 (main_run_das) [reader]
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) persondata.path: $DAS_S3ROOT/title13_input_data/table8/ri44.txt
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) unitdata.path: $DAS_S3ROOT/title13_input_data/table8/ri44.txt
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) persondata.class: programs.reader.sql_spar_table.SQLSparseHistogramTable
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) unitdata.class: programs.reader.sql_spar_table.UnitFromPersonSQLSparseHistogramTable
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) numreaderpartitions: 500
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) validate_input_data_constraints: off
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) partition_by_block_group: off
2020-12-09 10:34:40,902 driver.py:1130 (main_run_das) reader: programs.reader.table_reader.DASDecennialReader
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) tables: PersonData UnitData
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) privacy_table: PersonData
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) constraint_tables: UnitData
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) delimiter: \t
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) header: True
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) persondata.variables: MAFID geocode white black aian asian nhopi other hispanic sex householder voting hhgq
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) unitdata.variables: MAFID geocode white black aian asian nhopi other hispanic sex householder voting hhgq
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) linkage: geocode
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) geocode.type: str
2020-12-09 10:34:40,903 driver.py:1130 (main_run_das) geocode.legal: 0000000000000000-9999999999999999
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) mafid.type: str
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) mafid.legal: 000000000-999999999
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) householder.type: int
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) householder.legal: 0,1
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) sex.type: int
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) sex.legal: 0,1
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) voting.type: int
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) voting.legal: 0,1
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) hispanic.type: int
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) hispanic.legal: 0,1
2020-12-09 10:34:40,904 driver.py:1130 (main_run_das) white.type: int
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) white.legal: 0,1
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) black.type: int
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) black.legal: 0,1
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) aian.type: int
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) aian.legal: 0,1
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) asian.type: int
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) asian.legal: 0,1
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) nhopi.type: int
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) nhopi.legal: 0,1
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) other.type: int
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) other.legal: 0,1
2020-12-09 10:34:40,905 driver.py:1130 (main_run_das) hhgq.type: int
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) hhgq.legal: 0-7
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) persondata.recoder: programs.reader.e2e_recoder.table8_recoder
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) persondata.recode_variables: cenrace
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) cenrace: white black aian asian nhopi other
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) cenrace.type: int
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) cenrace.legal: 0-62
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) persondata.geography: geocode
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) persondata.histogram: hhgq voting hispanic cenrace
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) unitdata.geography: geocode
2020-12-09 10:34:40,906 driver.py:1130 (main_run_das) unitdata.histogram: hhgq
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) unitdata.unique: MAFID
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) git-commit: ami-hardening-linux commit 1e5ee5a07feaf3152ab1deb3e3368e471cdc0b62|emr-hardening-amazon-linux commit 64e12cc4c703b94fb65be9399f229731f61bf815|stackConfig commit 560b3d097cf16d76cf09d81e106b3765f130ff24|das_decennial commit 4c79eeda4c0dba0e178d2fc52b27887e2def46d1|das_framework commit db1ee20997ca872a3e71f5f3b0044d0ba8acc08a|ctools commit 74c9b8b05a2a32948d400e26d6d37da5b108db22|dfxml commit dd6fab74f87ffcfafb49e5ac6c092860ab863967|python_dvs commit a2eef140ab774ae9702fa74ad72a76b35a792e2b|etl_2020 commit f3e22fe3c2f47b5cfae28891cbc27fb8586644d1|census_etl commit 27d69154400fc4cda78ed9ad91fe835b347ef051|ctools commit 74c9b8b05a2a32948d400e26d6d37da5b108db22|safetab-2020 commit cd481d441d970e0804ca20384ab92d23c843c0a4|das-vm-config commit a32ee23f8cabd3ad592309563ddd1954a787bc7a (modifications from commit present at run time)
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,907 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,907 driver.py:1128 (main_run_das) [engine]
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) engine: programs.engine.topdown_engine.TopdownEngine
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) saved_noisy_app_id: application_1578508239190_1228
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) check_budget: off
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) save_noisy: on
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) delete_raw: 0
2020-12-09 10:34:40,907 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,908 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,908 driver.py:1128 (main_run_das) [schema]
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) schema: PL94
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,908 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,908 driver.py:1128 (main_run_das) [budget]
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) epsilon_budget_total: 4/1
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) geolevel_budget_prop: 103/512, 103/512, 102/512, 102/512, 102/512
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) dpqueries: hhgq, cenrace * hispanic * votingage, detailed
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) queriesprop: 230/1024, 692/1024, 102/1024
2020-12-09 10:34:40,908 driver.py:1130 (main_run_das) only_dyadic_rationals: False
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,909 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,909 driver.py:1128 (main_run_das) [constraints]
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) theinvariants.block: gqhh_vect, gqhh_tot
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) theinvariants.tract: tot
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) theconstraints.block: hhgq_total_lb, hhgq_total_ub, nurse_nva_0
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) theconstraints.tract: total, hhgq_total_lb, hhgq_total_ub
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) minimalschema: hhgq
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,909 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,909 driver.py:1128 (main_run_das) [writer]
2020-12-09 10:34:40,909 driver.py:1130 (main_run_das) output_path: $DAS_S3ROOT/users/$JBID/topdown_RI
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) output_datafile_name: data
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) produce_flag: 1
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) keep_attrs: geocode, syn, raw_housing
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) overwrite_flag: 1
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) save_git_commit: 1
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) s3cat: 1
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) s3cat_suffix: .txt
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) s3cat_verbose: 1
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) num_parts: 0
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) writer: programs.writer.pickled_block_data_writer.PickledBlockDataWriter
2020-12-09 10:34:40,910 driver.py:1130 (main_run_das) s3cat_prefix: .pickle
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) stats_dir: $DAS_S3ROOT/rpc/upload
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_suffix: .certificate.pdf
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_name: A very precise data set
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_title: Certificate of Disclosure Avoidance
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_person1: Ben Bitdiddle
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_title1: Novice Programmer
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_person2: Alyssa P. Hacker
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) certificate_title2: Supervisor
2020-12-09 10:34:40,911 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,911 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,911 driver.py:1128 (main_run_das) [validator]
2020-12-09 10:34:40,912 driver.py:1130 (main_run_das) validator: programs.stub_validator.validator
2020-12-09 10:34:40,912 driver.py:1130 (main_run_das) results_fname: /mnt/tmp/RA_results
2020-12-09 10:34:40,912 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,912 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,912 driver.py:1128 (main_run_das) [assessment]
2020-12-09 10:34:40,914 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,914 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,914 driver.py:1128 (main_run_das) [takedown]
2020-12-09 10:34:40,914 driver.py:1130 (main_run_das) takedown: programs.takedown.takedown
2020-12-09 10:34:40,914 driver.py:1130 (main_run_das) delete_output: False
2020-12-09 10:34:40,914 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,914 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,914 driver.py:1128 (main_run_das) [experiment]
2020-12-09 10:34:40,914 driver.py:1130 (main_run_das) experiment: programs.experiment.config_loops_exp.ConfigLoopsExperimentByLevel
2020-12-09 10:34:40,914 driver.py:1130 (main_run_das) run_experiment_flag: 0
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) loop2: FOR DEFAULT.epsilon IN 1,10,100
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) plotx: epsilon
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,915 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,915 driver.py:1128 (main_run_das) [error_metrics]
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) error_metrics: programs.metrics.accuracy_metrics.AccuracyMetrics
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) calculate_binned_query_errors: False
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,915 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,915 driver.py:1128 (main_run_das) [stats]
2020-12-09 10:34:40,915 driver.py:1130 (main_run_das) notify_gc_master: 0
2020-12-09 10:34:40,916 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,916 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,916 driver.py:1128 (main_run_das) [python]
2020-12-09 10:34:40,916 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,916 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,916 driver.py:1128 (main_run_das) [hdmm]
2020-12-09 10:34:40,916 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,916 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,916 driver.py:1128 (main_run_das) [monitoring]
2020-12-09 10:34:40,916 driver.py:1130 (main_run_das) print_heartbeat: False
2020-12-09 10:34:40,916 driver.py:1130 (main_run_das) print_heartbeat_frequency: 180
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) send_stacktrace: False
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) heartbeat_frequency: 60
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) notify_dashboard_gurobi_success: false
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) notify_dashboard_gurobi_retry: true
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) notification_frequency: 60
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,917 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,917 driver.py:1128 (main_run_das) [alert]
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) message: Hello world!
2020-12-09 10:34:40,917 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,917 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,918 driver.py:1128 (main_run_das) [environment]
2020-12-09 10:34:40,918 driver.py:1130 (main_run_das) das_run_id: 23399
2020-12-09 10:34:40,918 driver.py:1130 (main_run_das) epsilon: 1
2020-12-09 10:34:40,918 driver.py:1131 (main_run_das)
2020-12-09 10:34:40,918 driver.py:1156 (main_run_das) == no experiment ==
2020-12-09 10:34:40,918 driver.py:745 (runReader) Creating and running DAS reader
2020-12-09 10:34:40,918 driver.py:251 (getconfig) config[reader][test_area] does not exist and no default provided
2020-12-09 10:34:40,919 table_reader.py:570 (read) loading the data
2020-12-09 10:34:40,919 driver.py:738 (annotate) ANNOTATE: loading table PersonData
2020-12-09 10:34:40,920 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "loading table PersonData", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:40,920 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=loading+table+PersonData&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:40,938 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "das2020_version", "das_instance_id", "updates", "start", "executor_cores", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "executor_memory", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "applicationId", "fname_logfile", "executor_memory_overhead", "t", "max_result_size", "num_executors", "mission_type", "git_commit", "driver_memory"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:42,991 table_reader.py:578 (read) applying filter to PersonData
2020-12-09 10:34:42,992 table_reader.py:580 (read) recodes for PersonData
2020-12-09 10:34:46,142 table_reader.py:584 (read) dict
2020-12-09 10:34:47,208 driver.py:738 (annotate) ANNOTATE: loading table UnitData
2020-12-09 10:34:47,209 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "loading table UnitData", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:34:47,209 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=loading+table+UnitData&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:34:47,229 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:34:47,239 table_reader.py:578 (read) applying filter to UnitData
2020-12-09 10:34:47,239 table_reader.py:580 (read) recodes for UnitData
2020-12-09 10:34:47,239 table_reader.py:584 (read) dict
2020-12-09 10:34:47,239 driver.py:241 (getconfig) config[reader][UnitData.unique]=MAFID
2020-12-09 10:34:47,870 driver.py:241 (getconfig) config[geodict][redefine_counties]=in_strong_MCDs
2020-12-09 10:34:47,870 driver.py:241 (getconfig) config[geodict][aian_areas]=Legal_Federally_Recognized_American_Indian_Area,American_Indian_Joint_Use_Area,Hawaiian_Home_Land,Alaska_Native_Village_Statistical_Area,State_Recognized_Legal_American_Indian_Area,Oklahoma_Tribal_Statistical_Area,Joint_Use_Oklahoma_Tribal_Statistical_Area
2020-12-09 10:34:47,870 driver.py:248 (getconfig) config[reader][grfc_path] not present; returning default s3://uscb-decennial-ite-das/2010-convert/grfc
2020-12-09 10:34:47,870 driver.py:248 (getconfig) config[geodict][aian_ranges_path] not present; returning default /mnt/users/garfi303/das-vm-config/das_decennial/programs/geographic_spines/AIANNHCE_ranges.csv
2020-12-09 10:34:47,870 driver.py:251 (getconfig) config[geodict][strong_mcd_states] does not exist and no default provided
2020-12-09 10:34:47,871 driver.py:241 (getconfig) config[geodict][entity_threshold]=9
2020-12-09 10:34:47,871 driver.py:241 (getconfig) config[geodict][bypass_cutoff]=150
2020-12-09 10:34:47,871 driver.py:241 (getconfig) config[geodict][fanout_cutoff]=12
2020-12-09 10:35:00,282 driver.py:723 (<lambda>) Collecting unique geocodes above county
2020-12-09 10:35:34,138 driver.py:723 (<lambda>) Starting spine optimization
2020-12-09 10:35:36,724 driver.py:723 (<lambda>) Broadcasting PLB allocation...
2020-12-09 10:35:36,742 driver.py:723 (<lambda>) Broadcasting PLB allocation done.
2020-12-09 10:35:36,742 driver.py:241 (getconfig) config[reader][partition_by_block_group]=off
2020-12-09 10:35:37,126 driver.py:756 (runReader) original_data=PythonRDD[125] at RDD at PythonRDD.scala:53
2020-12-09 10:35:37,127 driver.py:761 (runEngine) runEngine: Creating and running DAS engine
2020-12-09 10:35:37,127 driver.py:738 (annotate) ANNOTATE: TopdownEngine run
2020-12-09 10:35:37,128 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "TopdownEngine run", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:37,128 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=TopdownEngine+run&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:37,148 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:37,148 driver.py:241 (getconfig) config[budget][epsilon_budget_total]=4/1
2020-12-09 10:35:37,149 driver.py:723 (<lambda>) The total budget is: 4
2020-12-09 10:35:37,149 driver.py:248 (getconfig) config[budget][approx_dp_delta] not present; returning default 1/10000000000
2020-12-09 10:35:37,149 driver.py:241 (getconfig) config[gurobi][l2_optimization_approach]=SinglePassRegular
2020-12-09 10:35:37,149 driver.py:248 (getconfig) config[engine][noisy_measurements_postfix] not present; returning default noisy_measurements
2020-12-09 10:35:37,149 driver.py:723 (<lambda>) The budget is split between geolevels with proportions: (Fraction(103, 512), Fraction(103, 512), Fraction(51, 256), Fraction(51, 256), Fraction(51, 256))
2020-12-09 10:35:37,149 driver.py:241 (getconfig) config[budget][DPqueries]=hhgq, cenrace * hispanic * votingage, detailed
2020-12-09 10:35:37,150 driver.py:251 (getconfig) config[budget][UnitDPqueries] does not exist and no default provided
2020-12-09 10:35:37,150 driver.py:251 (getconfig) config[budget][VacancyDPqueries] does not exist and no default provided
2020-12-09 10:35:37,150 driver.py:251 (getconfig) config[budget][RounderQueries] does not exist and no default provided
2020-12-09 10:35:37,150 driver.py:723 (<lambda>) ###
Levels of the marginals of main histogram DP queries to be measured:
2020-12-09 10:35:37,150 driver.py:723 (<lambda>) votingage levels:
------------------------
17 and under
18 and over
---------------------------------
2020-12-09 10:35:37,151 driver.py:723 (<lambda>) cenrace levels:
------------------------
white
black
aian
asian
nhopi
sor
white-black
white-aian
white-asian
white-nhopi
white-sor
black-aian
black-asian
black-nhopi
black-sor
aian-asian
aian-nhopi
aian-sor
asian-nhopi
asian-sor
nhopi-sor
white-black-aian
white-black-asian
white-black-nhopi
white-black-sor
white-aian-asian
white-aian-nhopi
white-aian-sor
white-asian-nhopi
white-asian-sor
white-nhopi-sor
black-aian-asian
black-aian-nhopi
black-aian-sor
black-asian-nhopi
black-asian-sor
black-nhopi-sor
aian-asian-nhopi
aian-asian-sor
aian-nhopi-sor
asian-nhopi-sor
white-black-aian-asian
white-black-aian-nhopi
white-black-aian-sor
white-black-asian-nhopi
white-black-asian-sor
white-black-nhopi-sor
white-aian-asian-nhopi
white-aian-asian-sor
white-aian-nhopi-sor
white-asian-nhopi-sor
black-aian-asian-nhopi
black-aian-asian-sor
black-aian-nhopi-sor
black-asian-nhopi-sor
aian-asian-nhopi-sor
white-black-aian-asian-nhopi
white-black-aian-asian-sor
white-black-aian-nhopi-sor
white-black-asian-nhopi-sor
white-aian-asian-nhopi-sor
black-aian-asian-nhopi-sor
white-black-aian-asian-nhopi-sor
---------------------------------
2020-12-09 10:35:37,151 driver.py:723 (<lambda>) hhgq levels:
------------------------
Household
Correctional facilities for adults
Juvenile facilities
Nursing facilities/Skilled-nursing facilities
Other institutional facilities
College/University student housing
Military quarters
Other noninstitutional facilities
---------------------------------
2020-12-09 10:35:37,151 driver.py:723 (<lambda>) hispanic levels:
------------------------
Not Hispanic or Latino
Hispanic or Latino
---------------------------------
2020-12-09 10:35:37,151 driver.py:723 (<lambda>) ###
Levels of the marginals of unit histogram DP queries to be measured:
2020-12-09 10:35:37,151 driver.py:723 (<lambda>) ###
Levels of the marginals of vacancy DP queries to be measured:
2020-12-09 10:35:37,151 driver.py:241 (getconfig) config[gurobi][l2_optimization_approach]=SinglePassRegular
2020-12-09 10:35:37,151 driver.py:241 (getconfig) config[gurobi][rounder_optimization_approach]=CellWiseRounder
2020-12-09 10:35:37,151 driver.py:248 (getconfig) config[gurobi][seq_optimization_approach] not present; returning default L2PlusRounderWithBackup
2020-12-09 10:35:37,152 driver.py:241 (getconfig) config[budget][queriesprop]=230/1024, 692/1024, 102/1024
2020-12-09 10:35:37,152 driver.py:723 (<lambda>) The sequential-composition budget allocation between queries in a geolevel is:
DPQueries: (Fraction(115, 512), Fraction(173, 256), Fraction(51, 512)) (0.224609375,0.67578125,0.099609375)
2020-12-09 10:35:37,152 driver.py:723 (<lambda>) Global scale parameter: 1/4
2020-12-09 10:35:37,153 driver.py:738 (annotate) ANNOTATE: Generating noisy answers
2020-12-09 10:35:37,154 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Generating noisy answers", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:37,154 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Generating+noisy+answers&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:37,175 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:37,175 driver.py:251 (getconfig) config[engine][geolevel_num_part] does not exist and no default provided
2020-12-09 10:35:37,784 driver.py:738 (annotate) ANNOTATE: Taking noisy measurements at Block
2020-12-09 10:35:37,786 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Taking noisy measurements at Block", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:37,786 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Taking+noisy+measurements+at+Block&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:37,806 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:40,026 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 0, "heartbeat": 1, "DAS_RUN_ID": "23399", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:40,027 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=0&heartbeat=1&DAS_RUN_ID=23399&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:40,041 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "executor_cores", "start", "mission_type", "stop", "num_geounits", "t", "max_result_size", "git_commit", "executor_memory_overhead", "updates", "environment", "campaign_name", "executor_memory", "driver_memory", "fname_stdout", "notes", "cost", "important", "exit_code", "num_geolevels", "das_instance_id", "das2020_version", "das_release", "driver_cores", "cpu_percent", "spark_submit", "mission_url", "fname_logfile", "id", "applicationId", "num_executors", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:41,467 driver.py:723 (<lambda>) Block invariants: gqhh_vect, gqhh_tot
2020-12-09 10:35:41,467 driver.py:723 (<lambda>) Block constraints: hhgq_total_lb, hhgq_total_ub, nurse_nva_0
2020-12-09 10:35:41,467 driver.py:738 (annotate) ANNOTATE: Taking noisy measurements at Block_Group
2020-12-09 10:35:41,468 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Taking noisy measurements at Block_Group", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:41,469 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Taking+noisy+measurements+at+Block_Group&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:41,490 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["spark_submit", "fname_stdout", "cost", "idle_minutes", "das2020_version", "das_instance_id", "num_executors", "max_result_size", "num_geolevels", "mission_url", "environment", "exit_code", "num_geounits", "stop", "das_release", "driver_memory", "campaign_name", "t", "modified_at", "git_commit", "executor_memory_overhead", "cpu_percent", "driver_cores", "updates", "important", "fname_logfile", "id", "executor_memory", "applicationId", "executor_cores", "notes", "start", "mission_type"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:46,335 driver.py:723 (<lambda>) Block_Group invariants: gqhh_vect, gqhh_tot
2020-12-09 10:35:46,336 driver.py:723 (<lambda>) Block_Group constraints: hhgq_total_lb, hhgq_total_ub, nurse_nva_0
2020-12-09 10:35:46,336 driver.py:738 (annotate) ANNOTATE: Taking noisy measurements at Tract
2020-12-09 10:35:46,338 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Taking noisy measurements at Tract", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:46,338 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Taking+noisy+measurements+at+Tract&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:46,358 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["driver_cores", "important", "cpu_percent", "modified_at", "git_commit", "driver_memory", "environment", "num_geolevels", "num_geounits", "updates", "das_instance_id", "mission_type", "stop", "exit_code", "cost", "campaign_name", "num_executors", "executor_memory_overhead", "max_result_size", "notes", "start", "id", "spark_submit", "mission_url", "das_release", "applicationId", "executor_memory", "idle_minutes", "fname_logfile", "executor_cores", "das2020_version", "fname_stdout", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:51,165 driver.py:723 (<lambda>) Tract invariants: gqhh_vect, gqhh_tot, tot
2020-12-09 10:35:51,166 driver.py:723 (<lambda>) Tract constraints: hhgq_total_lb, hhgq_total_ub, nurse_nva_0, total
2020-12-09 10:35:51,166 driver.py:738 (annotate) ANNOTATE: Taking noisy measurements at County
2020-12-09 10:35:51,167 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Taking noisy measurements at County", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:51,168 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Taking+noisy+measurements+at+County&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:51,188 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:52,862 driver.py:723 (<lambda>) County invariants: gqhh_vect, gqhh_tot, tot
2020-12-09 10:35:52,862 driver.py:723 (<lambda>) County constraints: hhgq_total_lb, hhgq_total_ub, nurse_nva_0, total
2020-12-09 10:35:52,863 driver.py:738 (annotate) ANNOTATE: Taking noisy measurements at State
2020-12-09 10:35:52,864 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Taking noisy measurements at State", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:52,864 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Taking+noisy+measurements+at+State&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:52,884 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "executor_cores", "start", "mission_type", "stop", "num_geounits", "t", "max_result_size", "git_commit", "executor_memory_overhead", "updates", "environment", "campaign_name", "executor_memory", "driver_memory", "fname_stdout", "notes", "cost", "important", "exit_code", "num_geolevels", "das_instance_id", "das2020_version", "das_release", "driver_cores", "cpu_percent", "spark_submit", "mission_url", "fname_logfile", "id", "applicationId", "num_executors", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:55,607 driver.py:723 (<lambda>) State invariants: gqhh_vect, gqhh_tot, tot
2020-12-09 10:35:55,607 driver.py:723 (<lambda>) State constraints: hhgq_total_lb, hhgq_total_ub, nurse_nva_0, total
2020-12-09 10:35:55,607 driver.py:241 (getconfig) config[engine][delete_raw]=0
2020-12-09 10:35:55,607 driver.py:241 (getconfig) config[engine][delete_raw]=0
2020-12-09 10:35:55,607 driver.py:241 (getconfig) config[engine][delete_raw]=0
2020-12-09 10:35:55,607 driver.py:241 (getconfig) config[engine][delete_raw]=0
2020-12-09 10:35:55,608 driver.py:241 (getconfig) config[engine][delete_raw]=0
2020-12-09 10:35:55,608 driver.py:738 (annotate) ANNOTATE: Saving noisy answers
2020-12-09 10:35:55,609 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving noisy answers", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:55,609 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+noisy+answers&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:55,629 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["spark_submit", "fname_stdout", "cost", "idle_minutes", "das2020_version", "das_instance_id", "num_executors", "max_result_size", "num_geolevels", "mission_url", "environment", "exit_code", "num_geounits", "stop", "das_release", "driver_memory", "campaign_name", "t", "modified_at", "git_commit", "executor_memory_overhead", "cpu_percent", "driver_cores", "updates", "important", "fname_logfile", "id", "executor_memory", "applicationId", "executor_cores", "notes", "start", "mission_type"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:55,630 driver.py:241 (getconfig) config[logging][dvs_enabled]=0
2020-12-09 10:35:55,630 driver.py:738 (annotate) ANNOTATE: Saving Block noisy measurements
2020-12-09 10:35:55,631 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving Block noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:35:55,631 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+Block+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:35:55,650 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "das2020_version", "das_instance_id", "updates", "start", "executor_cores", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "executor_memory", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "applicationId", "fname_logfile", "executor_memory_overhead", "t", "max_result_size", "num_executors", "mission_type", "git_commit", "driver_memory"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:35:55,650 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block.pickle)
2020-12-09 10:35:56,478 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block.pickle)
2020-12-09 10:36:19,233 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block.pickle
2020-12-09 10:36:19,233 driver.py:738 (annotate) ANNOTATE: Saving Block_Group noisy measurements
2020-12-09 10:36:19,235 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving Block_Group noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:19,235 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+Block_Group+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:19,256 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:19,256 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block_Group.pickle)
2020-12-09 10:36:20,094 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block_Group.pickle)
2020-12-09 10:36:23,547 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block_Group.pickle
2020-12-09 10:36:23,547 driver.py:738 (annotate) ANNOTATE: Saving Tract noisy measurements
2020-12-09 10:36:23,549 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving Tract noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:23,549 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+Tract+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:23,575 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:23,576 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Tract.pickle)
2020-12-09 10:36:24,396 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Tract.pickle)
2020-12-09 10:36:26,097 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Tract.pickle
2020-12-09 10:36:26,097 driver.py:738 (annotate) ANNOTATE: Saving County noisy measurements
2020-12-09 10:36:26,100 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving County noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:26,100 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+County+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:26,121 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:26,121 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-County.pickle)
2020-12-09 10:36:26,946 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-County.pickle)
2020-12-09 10:36:28,185 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-County.pickle
2020-12-09 10:36:28,185 driver.py:738 (annotate) ANNOTATE: Saving State noisy measurements
2020-12-09 10:36:28,187 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving State noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:28,187 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+State+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:28,211 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:28,211 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-State.pickle)
2020-12-09 10:36:29,030 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-State.pickle)
2020-12-09 10:36:30,122 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-State.pickle
2020-12-09 10:36:30,370 driver.py:738 (annotate) ANNOTATE: Reloading noisy answers
2020-12-09 10:36:30,372 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Reloading noisy answers", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:30,372 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Reloading+noisy+answers&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:30,393 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:30,449 driver.py:241 (getconfig) config[engine][check_budget]=off
2020-12-09 10:36:30,449 driver.py:723 (<lambda>) Skipping privacy checks
2020-12-09 10:36:30,449 driver.py:738 (annotate) ANNOTATE: topdown starting
2020-12-09 10:36:30,450 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "topdown starting", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:30,451 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=topdown+starting&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:30,472 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:30,473 driver.py:241 (getconfig) config[gurobi][l2_optimization_approach]=SinglePassRegular
2020-12-09 10:36:30,473 driver.py:241 (getconfig) config[gurobi][rounder_optimization_approach]=CellWiseRounder
2020-12-09 10:36:30,473 driver.py:738 (annotate) ANNOTATE: topdown will use l2 optimization approach: SinglePassRegular
2020-12-09 10:36:30,474 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "topdown will use l2 optimization approach: SinglePassRegular", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:30,474 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=topdown+will+use+l2+optimization+approach%3A+SinglePassRegular&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:30,493 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:30,493 driver.py:738 (annotate) ANNOTATE: topdown will use rounder optimization approach: CellWiseRounder
2020-12-09 10:36:30,494 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "topdown will use rounder optimization approach: CellWiseRounder", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:30,494 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=topdown+will+use+rounder+optimization+approach%3A+CellWiseRounder&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:30,513 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:30,513 driver.py:248 (getconfig) config[engine][pool_measurements] not present; returning default False
2020-12-09 10:36:37,932 driver.py:738 (annotate) ANNOTATE: Geolevel State has been optimized
2020-12-09 10:36:37,934 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel State has been optimized", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:37,934 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+State+has+been+optimized&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:37,955 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:37,955 driver.py:738 (annotate) ANNOTATE: Saving State optimized data
2020-12-09 10:36:37,956 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving State optimized data", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:37,957 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+State+optimized+data&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:37,976 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:37,976 driver.py:241 (getconfig) config[logging][dvs_enabled]=0
2020-12-09 10:36:37,977 driver.py:738 (annotate) ANNOTATE: Saving StateOptimized noisy measurements
2020-12-09 10:36:37,978 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving StateOptimized noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:37,978 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+StateOptimized+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:37,998 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:37,998 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-StateOptimized.pickle)
2020-12-09 10:36:38,836 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-StateOptimized.pickle)
2020-12-09 10:36:40,004 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-StateOptimized.pickle
2020-12-09 10:36:40,128 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 0, "heartbeat": 1, "DAS_RUN_ID": "23399", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:40,137 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=0&heartbeat=1&DAS_RUN_ID=23399&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:40,161 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:57,357 driver.py:738 (annotate) ANNOTATE: Geolevel County has been optimized
2020-12-09 10:36:57,358 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel County has been optimized", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:57,358 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+County+has+been+optimized&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:57,378 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:57,378 driver.py:738 (annotate) ANNOTATE: Saving County optimized data
2020-12-09 10:36:57,379 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving County optimized data", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:57,380 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+County+optimized+data&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:57,400 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:57,401 driver.py:241 (getconfig) config[logging][dvs_enabled]=0
2020-12-09 10:36:57,401 driver.py:738 (annotate) ANNOTATE: Saving CountyOptimized noisy measurements
2020-12-09 10:36:57,402 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving CountyOptimized noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:36:57,402 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+CountyOptimized+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:36:57,423 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:36:57,423 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-CountyOptimized.pickle)
2020-12-09 10:36:58,241 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-CountyOptimized.pickle)
2020-12-09 10:37:00,388 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-CountyOptimized.pickle
2020-12-09 10:37:12,821 driver.py:738 (annotate) ANNOTATE: Geolevel Tract has been optimized
2020-12-09 10:37:12,822 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel Tract has been optimized", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:12,822 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+Tract+has+been+optimized&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:12,843 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:12,843 driver.py:738 (annotate) ANNOTATE: Saving Tract optimized data
2020-12-09 10:37:12,844 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving Tract optimized data", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:12,844 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+Tract+optimized+data&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:12,863 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:12,864 driver.py:241 (getconfig) config[logging][dvs_enabled]=0
2020-12-09 10:37:12,864 driver.py:738 (annotate) ANNOTATE: Saving TractOptimized noisy measurements
2020-12-09 10:37:12,865 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving TractOptimized noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:12,865 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+TractOptimized+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:12,884 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:12,885 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-TractOptimized.pickle)
2020-12-09 10:37:13,688 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-TractOptimized.pickle)
2020-12-09 10:37:15,629 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-TractOptimized.pickle
2020-12-09 10:37:21,069 driver.py:738 (annotate) ANNOTATE: Geolevel Block_Group has been optimized
2020-12-09 10:37:21,071 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel Block_Group has been optimized", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:21,071 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+Block_Group+has+been+optimized&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:21,091 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:21,091 driver.py:738 (annotate) ANNOTATE: Saving Block_Group optimized data
2020-12-09 10:37:21,092 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving Block_Group optimized data", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:21,093 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+Block_Group+optimized+data&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:21,113 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:21,113 driver.py:241 (getconfig) config[logging][dvs_enabled]=0
2020-12-09 10:37:21,113 driver.py:738 (annotate) ANNOTATE: Saving Block_GroupOptimized noisy measurements
2020-12-09 10:37:21,114 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving Block_GroupOptimized noisy measurements", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:21,115 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+Block_GroupOptimized+noisy+measurements&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:21,134 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:21,134 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block_GroupOptimized.pickle)
2020-12-09 10:37:21,965 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block_GroupOptimized.pickle)
2020-12-09 10:37:23,148 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/noisy_measurements/application_1607440845980_0018-Block_GroupOptimized.pickle
2020-12-09 10:37:23,902 driver.py:738 (annotate) ANNOTATE: Geolevel State RDD has 1 rows
2020-12-09 10:37:23,904 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel State RDD has 1 rows", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:23,905 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+State+RDD+has+1+rows&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:23,925 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:24,309 driver.py:738 (annotate) ANNOTATE: Geolevel County RDD has 5 rows
2020-12-09 10:37:24,310 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel County RDD has 5 rows", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:24,310 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+County+RDD+has+5+rows&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:24,329 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:24,702 driver.py:738 (annotate) ANNOTATE: Geolevel Tract RDD has 296 rows
2020-12-09 10:37:24,704 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel Tract RDD has 296 rows", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:24,704 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+Tract+RDD+has+296+rows&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:24,722 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:25,073 driver.py:738 (annotate) ANNOTATE: Geolevel Block_Group RDD has 1386 rows
2020-12-09 10:37:25,074 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel Block_Group RDD has 1386 rows", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:25,074 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+Block_Group+RDD+has+1386+rows&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:25,094 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:30,949 driver.py:738 (annotate) ANNOTATE: Geolevel Block RDD has 17644 rows
2020-12-09 10:37:30,950 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Geolevel Block RDD has 17644 rows", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:30,950 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Geolevel+Block+RDD+has+17644+rows&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:30,969 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:30,970 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "num_geounits": 19332, "DAS_RUN_ID": "23399", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:30,970 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&num_geounits=19332&DAS_RUN_ID=23399&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:30,985 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:30,985 driver.py:738 (annotate) ANNOTATE: topdown done
2020-12-09 10:37:30,986 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "topdown done", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:30,987 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=topdown+done&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:31,006 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:31,007 driver.py:248 (getconfig) config[engine][return_all_levels] not present; returning default False
2020-12-09 10:37:31,153 driver.py:771 (runEngine) privatized_data=(PythonRDD[261] at RDD at PythonRDD.scala:53, {'State': Accumulator<id=0, value=0>, 'County': Accumulator<id=1, value=0>, 'Tract': Accumulator<id=2, value=0>, 'Block_Group': Accumulator<id=3, value=0>})
2020-12-09 10:37:31,154 driver.py:776 (runErrorMetrics) runErrorMetrics: Creating and running DAS error_metrics
2020-12-09 10:37:31,154 driver.py:241 (getconfig) config[engine][delete_raw]=0
2020-12-09 10:37:31,154 driver.py:723 (<lambda>) Reaggregating optimized block data
2020-12-09 10:37:31,370 driver.py:738 (annotate) ANNOTATE: Finding total population by summing the State level
2020-12-09 10:37:31,371 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Finding total population by summing the State level", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:31,372 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Finding+total+population+by+summing+the+State+level&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:31,392 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:37,331 driver.py:251 (getconfig) config[error_metrics][queries2measure] does not exist and no default provided
2020-12-09 10:37:37,331 driver.py:738 (annotate) ANNOTATE: Calculating Block L1 error
2020-12-09 10:37:37,333 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block L1 error", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:37,333 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+L1+error&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:37,353 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:37,977 driver.py:738 (annotate) ANNOTATE: Calculating Block total change
2020-12-09 10:37:37,979 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block total change", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:37,979 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+total+change&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:38,000 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:38,561 driver.py:738 (annotate) ANNOTATE: Calculating Block cenrace * hispanic * votingage query L1 errors
2020-12-09 10:37:38,562 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block cenrace * hispanic * votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:38,563 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+cenrace+%2A+hispanic+%2A+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:38,583 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:39,142 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:39,143 driver.py:738 (annotate) ANNOTATE: Calculating Block detailed query L1 errors
2020-12-09 10:37:39,144 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block detailed query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:39,144 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+detailed+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:39,164 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:39,722 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:39,722 driver.py:738 (annotate) ANNOTATE: Calculating Block hhgq query L1 errors
2020-12-09 10:37:39,723 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block hhgq query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:39,724 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+hhgq+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:39,744 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:40,223 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 0, "heartbeat": 1, "DAS_RUN_ID": "23399", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:40,223 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=0&heartbeat=1&DAS_RUN_ID=23399&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:40,237 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:40,304 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:40,305 driver.py:738 (annotate) ANNOTATE: Calculating Block cenrace query L1 errors
2020-12-09 10:37:40,306 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block cenrace query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:40,306 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+cenrace+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:40,326 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:40,934 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:40,934 driver.py:738 (annotate) ANNOTATE: Calculating Block hispanic query L1 errors
2020-12-09 10:37:40,935 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block hispanic query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:40,935 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+hispanic+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:40,955 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:41,516 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:41,516 driver.py:738 (annotate) ANNOTATE: Calculating Block votingage query L1 errors
2020-12-09 10:37:41,517 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:41,518 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:41,537 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:42,092 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:42,093 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group L1 error
2020-12-09 10:37:42,094 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group L1 error", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:42,094 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+L1+error&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:42,114 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:42,639 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group total change
2020-12-09 10:37:42,640 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group total change", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:42,641 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+total+change&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:42,661 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:43,037 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group cenrace * hispanic * votingage query L1 errors
2020-12-09 10:37:43,038 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group cenrace * hispanic * votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:43,038 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+cenrace+%2A+hispanic+%2A+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:43,057 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:43,612 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:43,612 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group detailed query L1 errors
2020-12-09 10:37:43,613 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group detailed query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:43,613 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+detailed+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:43,634 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:44,173 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:44,173 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group hhgq query L1 errors
2020-12-09 10:37:44,174 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group hhgq query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:44,174 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+hhgq+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:44,196 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:44,798 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:44,799 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group cenrace query L1 errors
2020-12-09 10:37:44,800 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group cenrace query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:44,800 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+cenrace+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:44,820 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:45,416 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:45,417 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group hispanic query L1 errors
2020-12-09 10:37:45,418 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group hispanic query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:45,418 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+hispanic+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:45,436 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:46,032 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:46,032 driver.py:738 (annotate) ANNOTATE: Calculating Block_Group votingage query L1 errors
2020-12-09 10:37:46,033 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Block_Group votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:46,033 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Block_Group+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:46,054 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:46,596 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:46,596 driver.py:738 (annotate) ANNOTATE: Calculating Tract L1 error
2020-12-09 10:37:46,597 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract L1 error", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:46,598 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+L1+error&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:46,618 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:47,213 driver.py:738 (annotate) ANNOTATE: Calculating Tract total change
2020-12-09 10:37:47,215 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract total change", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:47,215 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+total+change&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:47,236 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:47,658 driver.py:738 (annotate) ANNOTATE: Calculating Tract cenrace * hispanic * votingage query L1 errors
2020-12-09 10:37:47,660 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract cenrace * hispanic * votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:47,660 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+cenrace+%2A+hispanic+%2A+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:47,680 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:48,271 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:48,272 driver.py:738 (annotate) ANNOTATE: Calculating Tract detailed query L1 errors
2020-12-09 10:37:48,273 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract detailed query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:48,273 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+detailed+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:48,294 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:48,867 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:48,868 driver.py:738 (annotate) ANNOTATE: Calculating Tract hhgq query L1 errors
2020-12-09 10:37:48,869 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract hhgq query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:48,869 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+hhgq+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:48,889 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "das2020_version", "das_instance_id", "updates", "start", "executor_cores", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "executor_memory", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "applicationId", "fname_logfile", "executor_memory_overhead", "t", "max_result_size", "num_executors", "mission_type", "git_commit", "driver_memory"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:49,433 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:49,433 driver.py:738 (annotate) ANNOTATE: Calculating Tract cenrace query L1 errors
2020-12-09 10:37:49,434 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract cenrace query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:49,435 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+cenrace+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:49,455 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "idle_minutes", "max_result_size", "das_release", "fname_logfile", "updates", "environment", "mission_url", "executor_cores", "applicationId", "driver_memory", "campaign_name", "cost", "start", "das_instance_id", "exit_code", "important", "fname_stdout", "stop", "cpu_percent", "num_executors", "executor_memory_overhead", "num_geolevels", "git_commit", "notes", "spark_submit", "num_geounits", "mission_type", "das2020_version", "modified_at", "id", "driver_cores", "t"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:50,032 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:50,033 driver.py:738 (annotate) ANNOTATE: Calculating Tract hispanic query L1 errors
2020-12-09 10:37:50,034 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract hispanic query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:50,034 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+hispanic+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:50,053 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:50,646 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:50,646 driver.py:738 (annotate) ANNOTATE: Calculating Tract votingage query L1 errors
2020-12-09 10:37:50,647 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating Tract votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:50,648 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+Tract+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:50,667 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:51,228 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:51,229 driver.py:738 (annotate) ANNOTATE: Calculating County L1 error
2020-12-09 10:37:51,230 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County L1 error", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:51,230 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+L1+error&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:51,250 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "das2020_version", "das_instance_id", "updates", "start", "executor_cores", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "executor_memory", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "applicationId", "fname_logfile", "executor_memory_overhead", "t", "max_result_size", "num_executors", "mission_type", "git_commit", "driver_memory"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:51,815 driver.py:738 (annotate) ANNOTATE: Calculating County total change
2020-12-09 10:37:51,816 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County total change", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:51,817 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+total+change&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:51,836 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:52,184 driver.py:738 (annotate) ANNOTATE: Calculating County cenrace * hispanic * votingage query L1 errors
2020-12-09 10:37:52,185 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County cenrace * hispanic * votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:52,185 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+cenrace+%2A+hispanic+%2A+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:52,206 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:52,796 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:52,796 driver.py:738 (annotate) ANNOTATE: Calculating County detailed query L1 errors
2020-12-09 10:37:52,798 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County detailed query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:52,798 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+detailed+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:52,818 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:53,388 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:53,388 driver.py:738 (annotate) ANNOTATE: Calculating County hhgq query L1 errors
2020-12-09 10:37:53,389 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County hhgq query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:53,389 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+hhgq+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:53,409 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:54,026 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:54,026 driver.py:738 (annotate) ANNOTATE: Calculating County cenrace query L1 errors
2020-12-09 10:37:54,027 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County cenrace query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:54,028 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+cenrace+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:54,047 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:54,624 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:54,624 driver.py:738 (annotate) ANNOTATE: Calculating County hispanic query L1 errors
2020-12-09 10:37:54,626 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County hispanic query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:54,626 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+hispanic+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:54,646 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:55,223 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:55,224 driver.py:738 (annotate) ANNOTATE: Calculating County votingage query L1 errors
2020-12-09 10:37:55,225 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating County votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:55,225 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+County+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:55,245 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:55,834 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:55,835 driver.py:738 (annotate) ANNOTATE: Calculating State L1 error
2020-12-09 10:37:55,836 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State L1 error", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:55,836 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+L1+error&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:55,857 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:56,423 driver.py:738 (annotate) ANNOTATE: Calculating State total change
2020-12-09 10:37:56,425 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State total change", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:56,425 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+total+change&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:56,446 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:56,820 driver.py:738 (annotate) ANNOTATE: Calculating State cenrace * hispanic * votingage query L1 errors
2020-12-09 10:37:56,822 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State cenrace * hispanic * votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:56,822 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+cenrace+%2A+hispanic+%2A+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:56,841 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:57,485 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:57,485 driver.py:738 (annotate) ANNOTATE: Calculating State detailed query L1 errors
2020-12-09 10:37:57,487 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State detailed query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:57,487 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+detailed+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:57,509 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:58,081 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:58,081 driver.py:738 (annotate) ANNOTATE: Calculating State hhgq query L1 errors
2020-12-09 10:37:58,083 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State hhgq query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:58,083 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+hhgq+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:58,103 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:58,677 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:58,677 driver.py:738 (annotate) ANNOTATE: Calculating State cenrace query L1 errors
2020-12-09 10:37:58,679 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State cenrace query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:58,679 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+cenrace+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:58,699 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["cpu_percent", "start", "fname_stdout", "executor_memory", "stop", "num_geounits", "campaign_name", "fname_logfile", "das_release", "notes", "exit_code", "environment", "num_executors", "mission_type", "idle_minutes", "updates", "important", "das_instance_id", "max_result_size", "applicationId", "executor_memory_overhead", "das2020_version", "executor_cores", "driver_memory", "t", "id", "cost", "mission_url", "spark_submit", "modified_at", "driver_cores", "git_commit", "num_geolevels"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:59,280 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:59,281 driver.py:738 (annotate) ANNOTATE: Calculating State hispanic query L1 errors
2020-12-09 10:37:59,282 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State hispanic query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:59,282 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+hispanic+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:59,303 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:37:59,922 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:37:59,922 driver.py:738 (annotate) ANNOTATE: Calculating State votingage query L1 errors
2020-12-09 10:37:59,923 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Calculating State votingage query L1 errors", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:37:59,924 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Calculating+State+votingage+query+L1+errors&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:37:59,943 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "das2020_version", "das_instance_id", "updates", "start", "executor_cores", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "executor_memory", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "applicationId", "fname_logfile", "executor_memory_overhead", "t", "max_result_size", "num_executors", "mission_type", "git_commit", "driver_memory"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:00,506 driver.py:241 (getconfig) config[error_metrics][calculate_binned_query_errors]=False
2020-12-09 10:38:00,506 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,506 driver.py:723 (<lambda>) 1 - TVD for each geolevel (detailed):
2020-12-09 10:38:00,506 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,506 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,506 driver.py:723 (<lambda>) Total change and L1 error for each geolevel:
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) cenrace * hispanic * votingage query L1 error for each geolevel:
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) detailed query L1 error for each geolevel:
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,507 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) hhgq query L1 error for each geolevel:
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) cenrace query L1 error for each geolevel:
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) hispanic query L1 error for each geolevel:
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,508 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,509 driver.py:723 (<lambda>) votingage query L1 error for each geolevel:
2020-12-09 10:38:00,509 driver.py:723 (<lambda>) ########################################
2020-12-09 10:38:00,509 driver.py:785 (runErrorMetrics) Error Metrics data = None
2020-12-09 10:38:00,509 driver.py:791 (runWriter) runWriter: Creating and running DAS writer
2020-12-09 10:38:00,509 driver.py:738 (annotate) ANNOTATE: PickledBlockDataWriter write
2020-12-09 10:38:00,511 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "PickledBlockDataWriter write", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:00,511 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=PickledBlockDataWriter+write&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:00,531 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:00,531 driver.py:738 (annotate) ANNOTATE: Producing DAS output
2020-12-09 10:38:00,536 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Producing DAS output", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:00,536 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Producing+DAS+output&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:00,555 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_memory", "environment", "modified_at", "fname_logfile", "updates", "max_result_size", "fname_stdout", "das_release", "id", "t", "das2020_version", "applicationId", "git_commit", "idle_minutes", "num_geounits", "exit_code", "important", "spark_submit", "campaign_name", "num_executors", "executor_memory_overhead", "num_geolevels", "driver_memory", "stop", "mission_url", "start", "executor_cores", "driver_cores", "cost", "das_instance_id", "notes", "mission_type", "cpu_percent"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:00,556 pickled_block_data_writer.py:50 (transformRDDForSaving) Transforming node information to dict.
2020-12-09 10:38:00,556 driver.py:241 (getconfig) config[writer][keep_attrs]=geocode, syn, raw_housing
2020-12-09 10:38:00,556 pickled_block_data_writer.py:54 (transformRDDForSaving) Keeping the following node attributes: ('geocode', 'syn', 'raw_housing')
2020-12-09 10:38:01,158 driver.py:241 (getconfig) config[writer][num_parts]=0
2020-12-09 10:38:01,159 driver.py:738 (annotate) ANNOTATE: Writer coalesce skipped because num_parts <= 0
2020-12-09 10:38:01,160 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Writer coalesce skipped because num_parts <= 0", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:01,160 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Writer+coalesce+skipped+because+num_parts+%3C%3D+0&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:01,180 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "applicationId", "num_geolevels", "num_executors", "exit_code", "environment", "num_geounits", "spark_submit", "executor_cores", "driver_memory", "cost", "cpu_percent", "mission_type", "id", "das2020_version", "executor_memory", "fname_stdout", "driver_cores", "start", "das_release", "stop", "max_result_size", "fname_logfile", "notes", "campaign_name", "t", "mission_url", "das_instance_id", "updates", "important", "git_commit", "idle_minutes", "executor_memory_overhead"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:01,181 driver.py:738 (annotate) ANNOTATE: num_parts=0 time for repartition/coalesce: 0.02237224578857422
2020-12-09 10:38:01,182 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "num_parts=0 time for repartition/coalesce: 0.02237224578857422", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:01,182 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=num_parts%3D0+time+for+repartition%2Fcoalesce%3A+0.02237224578857422&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:01,201 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:01,201 driver.py:738 (annotate) ANNOTATE: saveRunData
2020-12-09 10:38:01,202 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "saveRunData", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:01,202 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=saveRunData&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:01,223 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "das2020_version", "das_instance_id", "updates", "start", "executor_cores", "important", "id", "das_release", "notes", "idle_minutes", "driver_cores", "spark_submit", "executor_memory", "exit_code", "cost", "cpu_percent", "modified_at", "num_geounits", "fname_stdout", "environment", "mission_url", "campaign_name", "stop", "applicationId", "fname_logfile", "executor_memory_overhead", "t", "max_result_size", "num_executors", "mission_type", "git_commit", "driver_memory"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:01,224 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data)
2020-12-09 10:38:08,052 driver.py:738 (annotate) ANNOTATE: writing RDD to s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data
2020-12-09 10:38:08,054 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "writing RDD to s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:08,054 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=writing+RDD+to+s3%3A%2F%2Fuscb-decennial-ite-das%2Fusers%2Fgarfi303%2Ftopdown_RI%2Fdata&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:08,075 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["modified_at", "notes", "cost", "exit_code", "das_release", "mission_type", "fname_stdout", "git_commit", "driver_memory", "campaign_name", "spark_submit", "start", "das2020_version", "executor_memory", "stop", "mission_url", "environment", "driver_cores", "applicationId", "executor_memory_overhead", "important", "num_geounits", "cpu_percent", "id", "das_instance_id", "num_executors", "t", "fname_logfile", "max_result_size", "executor_cores", "num_geolevels", "updates", "idle_minutes"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:08,075 block_node_writer.py:71 (saveRDD) Saving data to directory: s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data
2020-12-09 10:38:08,075 das_utils.py:275 (clearPath) clearPath(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data)
2020-12-09 10:38:08,926 das_utils.py:397 (savePickledRDD) rdd.saveAsPickleFile(s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data)
2020-12-09 10:38:11,293 das_utils.py:400 (savePickledRDD) Computing DVS annotations for s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data
2020-12-09 10:38:11,293 driver.py:738 (annotate) ANNOTATE: Saving config to directory: s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data_config.ini
2020-12-09 10:38:11,295 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving config to directory: s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data_config.ini", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:11,295 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+config+to+directory%3A+s3%3A%2F%2Fuscb-decennial-ite-das%2Fusers%2Fgarfi303%2Ftopdown_RI%2Fdata_config.ini&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:11,317 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "exit_code", "applicationId", "campaign_name", "num_geounits", "stop", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:11,326 driver.py:723 (<lambda>) Feasibility dictionary: {'State': 0, 'County': 0, 'Tract': 0, 'Block_Group': 0}
2020-12-09 10:38:11,327 driver.py:738 (annotate) ANNOTATE: Saving feas_dict to directory: s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data_feas_dict.json
2020-12-09 10:38:11,328 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Saving feas_dict to directory: s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data_feas_dict.json", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:11,329 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Saving+feas_dict+to+directory%3A+s3%3A%2F%2Fuscb-decennial-ite-das%2Fusers%2Fgarfi303%2Ftopdown_RI%2Fdata_feas_dict.json&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:11,351 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["executor_cores", "max_result_size", "modified_at", "das2020_version", "driver_memory", "notes", "driver_cores", "idle_minutes", "das_release", "spark_submit", "fname_stdout", "t", "num_executors", "cpu_percent", "git_commit", "num_geounits", "mission_url", "mission_type", "environment", "applicationId", "campaign_name", "start", "cost", "das_instance_id", "important", "executor_memory_overhead", "num_geolevels", "id", "executor_memory", "fname_logfile", "updates", "exit_code", "stop"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:11,360 driver.py:738 (annotate) ANNOTATE: num_parts=0 time for saveRunData: 10.201304197311401
2020-12-09 10:38:11,361 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "num_parts=0 time for saveRunData: 10.201304197311401", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:11,362 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=num_parts%3D0+time+for+saveRunData%3A+10.201304197311401&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:11,380 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:11,381 driver.py:738 (annotate) ANNOTATE: PickledBlockDataWriter.write done
2020-12-09 10:38:11,381 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "PickledBlockDataWriter.write done", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:11,382 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=PickledBlockDataWriter.write+done&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:11,401 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:11,672 driver.py:800 (runWriter) written_data=PythonRDD[326] at RDD at PythonRDD.scala:53
2020-12-09 10:38:11,672 driver.py:807 (runValidator) runValidator: Creating and running DAS validator
2020-12-09 10:38:11,672 driver.py:816 (runValidator) valid=True
2020-12-09 10:38:11,672 driver.py:837 (runTakedown) runTakedown: Creating and running DAS takedown
2020-12-09 10:38:11,673 driver.py:241 (getconfig) config[takedown][delete_output]=False
2020-12-09 10:38:11,674 driver.py:1166 (main_run_das) Elapsed time: 214.92 seconds
2020-12-09 10:38:11,675 driver.py:1167 (main_run_das) END /mnt/users/garfi303/das-vm-config/das_decennial/das_framework/driver.py
2020-12-09 10:38:11,676 __init__.py:113 (add_params) Certificate param @@DATE@@ = 2020-12-09T10:38:11
2020-12-09 10:38:11,676 __init__.py:113 (add_params) Certificate param @@NAME@@ = A very precise data set
2020-12-09 10:38:11,676 __init__.py:113 (add_params) Certificate param @@TITLE1@@ = Novice Programmer
2020-12-09 10:38:11,676 __init__.py:113 (add_params) Certificate param @@TITLE2@@ = Supervisor
2020-12-09 10:38:19,222 das2020_driver.py:307 (produce_certificate) typeset certificate to logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.certificate.pdf
2020-12-09 10:38:19,223 das2020_driver.py:559 (<module>) {"applicationId": "application_1607440845980_0018", "terminated": true, "STOP": 1607528299.2231503, "func": " __main__"}
2020-12-09 10:38:19,933 das_stats.py:117 (upload) upload: logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.dfxml -> s3://uscb-decennial-ite-das-logs/j-2KNUGMTOQL225/DAS/das2020logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.dfxml
2020-12-09 10:38:19,933 driver.py:738 (annotate) ANNOTATE: collected 10000 stats from syslog
2020-12-09 10:38:19,937 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "collected 10000 stats from syslog", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:19,937 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=collected+10000+stats+from+syslog&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:19,959 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["mission_type", "das2020_version", "executor_cores", "cpu_percent", "num_geolevels", "num_geounits", "driver_cores", "modified_at", "start", "driver_memory", "git_commit", "stop", "updates", "cost", "spark_submit", "important", "executor_memory", "exit_code", "fname_logfile", "das_release", "t", "executor_memory_overhead", "fname_stdout", "max_result_size", "id", "das_instance_id", "applicationId", "environment", "campaign_name", "mission_url", "idle_minutes", "notes", "num_executors"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:19,959 driver.py:738 (annotate) ANNOTATE: Computing summary Gurobi statistics
2020-12-09 10:38:19,961 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "DAS_RUN_ID": "23399", "message": "Computing summary Gurobi statistics", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:19,961 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&DAS_RUN_ID=23399&message=Computing+summary+Gurobi+statistics&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:19,981 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["das2020_version", "git_commit", "fname_stdout", "driver_cores", "spark_submit", "driver_memory", "cost", "environment", "start", "mission_type", "executor_cores", "num_geolevels", "stop", "cpu_percent", "fname_logfile", "exit_code", "updates", "num_geounits", "num_executors", "campaign_name", "max_result_size", "das_instance_id", "important", "applicationId", "id", "mission_url", "executor_memory_overhead", "das_release", "notes", "idle_minutes", "executor_memory", "t", "modified_at"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:19,981 dconfig.py:139 (dopen) dopen: path:logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.dfxml mode:r encoding:utf-8
2020-12-09 10:38:19,982 dconfig.py:149 (dopen) =>open(path=logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.dfxml,mode=r,encoding=utf-8)
2020-12-09 10:38:22,909 utils.py:126 (_init_num_threads) Note: detected 96 virtual cores but NumExpr set to maximum of 64, check "NUMEXPR_MAX_THREADS" environment variable.
2020-12-09 10:38:22,910 utils.py:129 (_init_num_threads) Note: NumExpr detected 96 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2020-12-09 10:38:22,910 utils.py:141 (_init_num_threads) NumExpr defaulting to 8 threads.
2020-12-09 10:38:22,976 font_manager.py:1334 (_findfont_cached) findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-12-09 10:38:22,977 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-09 10:38:22,977 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,977 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,978 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,979 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,980 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:22,981 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-12-09 10:38:22,982 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:22,983 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-09 10:38:22,984 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-12-09 10:38:22,984 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-09 10:38:22,984 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:22,984 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-09 10:38:22,984 font_manager.py:1367 (_findfont_cached) findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/mnt/das_python/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-12-09 10:38:23,054 font_manager.py:1334 (_findfont_cached) findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,055 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,056 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-09 10:38:23,057 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-09 10:38:23,058 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-09 10:38:23,059 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-12-09 10:38:23,060 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-09 10:38:23,061 font_manager.py:1346 (_findfont_cached) findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-09 10:38:23,061 font_manager.py:1367 (_findfont_cached) findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/mnt/das_python/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-12-09 10:38:26,512 daslog.py:116 (addSparkExecutionReport) CANNOT FIND SPARK DICT IN: b'<spark><error>SPARK_ENV_LOADED present but no listener on localhost ports 4040-4050</error></spark>'
2020-12-09 10:38:27,583 das_stats.py:117 (upload) upload: logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.zip -> s3://uscb-decennial-ite-das/rpc/upload/logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.zip
2020-12-09 10:38:27,586 driver.py:723 (<lambda>) DAS run stats: None
2020-12-09 10:38:27,586 driver.py:723 (<lambda>)
DAS OUTPUT FILES:
2020-12-09 10:38:27,586 driver.py:723 (<lambda>)     s3://uscb-decennial-ite-das/users/garfi303/topdown_RI/data
2020-12-09 10:38:27,586 driver.py:723 (<lambda>)     logs/DAS-2020-12-09_0634_WOOLEN_ORIGINAL.certificate.pdf
2020-12-09 10:38:27,586 driver.py:723 (<lambda>)
2020-12-09 10:38:27,588 dashboard.py:127 (das_log_) das_log: obj={"clusterId": "j-2KNUGMTOQL225", "instanceId": "i-0fa5f6fd24cb68343", "code": 10, "stop": "now()", "exit_code": 0, "DAS_RUN_ID": "23399", "message": "WOOLEN_ORIGINAL finished", "jbid": "garfi303", "mission_name": "WOOLEN_ORIGINAL", "gurobi_version": "9.1.0", "python_executable": "/usr/bin/python36"}
2020-12-09 10:38:27,588 dashboard.py:128 (das_log_) das_log: url=https://dasexperimental.ite.ti.census.gov/api/daslog.cgi?clusterId=j-2KNUGMTOQL225&instanceId=i-0fa5f6fd24cb68343&code=10&stop=now%28%29&exit_code=0&DAS_RUN_ID=23399&message=WOOLEN_ORIGINAL+finished&jbid=garfi303&mission_name=WOOLEN_ORIGINAL&gurobi_version=9.1.0&python_executable=%2Fusr%2Fbin%2Fpython36
2020-12-09 10:38:27,614 dashboard.py:131 (das_log_) das_log: ret={"version": "2.1", "unused_column_names": ["num_geolevels", "important", "mission_url", "driver_cores", "max_result_size", "cost", "start", "executor_memory", "num_executors", "das2020_version", "das_release", "t", "git_commit", "fname_logfile", "idle_minutes", "fname_stdout", "modified_at", "updates", "id", "mission_type", "cpu_percent", "notes", "executor_memory_overhead", "executor_cores", "spark_submit", "environment", "applicationId", "campaign_name", "num_geounits", "driver_memory", "das_instance_id"], "run_id": 23399, "das_run_id": 23399}
2020-12-09 10:38:27,614 driver.py:723 (<lambda>) /mnt/users/garfi303/das-vm-config/das_decennial/das2020_driver.py: Elapsed time: 223 seconds (3 min, 43 seconds)